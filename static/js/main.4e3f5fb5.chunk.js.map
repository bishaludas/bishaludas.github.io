{"version":3,"sources":["assets/budash.jpg","components/Navigation/Navbar.js","components/About/About.js","components/Resume/Resume.js","components/Articles/posts/images/GitMeSomeKnowledge1.png","components/Articles/posts/GitMeSomeKnowledge.js","components/Articles/posts/AwsCliCheatsheet.js","components/Articles/posts/ArticlesWorthReading.js","components/Articles/posts/UpdatingNestedJavascript.js","components/Articles/posts/images/migratingtoreactTable1.png","components/Articles/posts/images/migratingtoreactTable2.png","components/Articles/posts/images/migratingtoreactTable3.jpeg","components/Articles/posts/MigratingToReactTable.js","components/Articles/posts/IssuesDevTeam.js","components/Articles/posts/CreateUserinSQL.js","components/Articles/posts/images/SecureConnectionDB1.jpg","components/Articles/posts/images/SecureConnectionDB2.png","components/Articles/posts/SecureConnectionDB.js","components/Articles/posts/PostIndex.js","components/Articles/ListArticles.js","components/Articles/ShowArticle.js","components/Articles/Articles.js","components/Journal/posts/JournalIndex.js","components/Journal/posts/NepseApi.js","components/Journal/posts/NamecheapApi.js","components/Journal/ListJournal.js","components/Journal/ShowJournal.js","components/Journal/Journal.js","components/projects/posts/images/eisei.jpeg","components/projects/posts/Eisei.js","components/projects/posts/images/nepse.png","components/projects/posts/NepseApi.js","components/projects/posts/images/namecheap1.png","components/projects/posts/images/namecheap2.png","components/projects/posts/NamecheapApi.js","components/projects/posts/images/docker.jpeg","components/projects/posts/ProjectIndex.js","components/projects/posts/DockerImage.js","components/projects/ListProject.js","components/projects/ShowProject.js","components/projects/Project.js","components/About/Stack.js","App.js","index.js"],"names":["Navbar","changeTheme","darkMode","classes","useStyles","history","useHistory","Grid","container","spacing","item","sm","md","lg","to","Avatar","className","large","alt","src","Budash","xs","Typography","variant","component","gutterBottom","author","onClick","console","log","push","style","cursor","marginLeft","navLinkContainer","navlinks","activeClassName","active","makeStyles","width","height","margin","marginRight","textDecoration","fontWeight","color","fontSize","theme","content","wordSpacing","marginBottom","breakpoints","down","links","About","href","target","rel","Resume","GitMeSomeKnowledge","tags","display","Date","toDateString","length","map","key","Chip","size","label","pills","class","spellcheck","GitMeSomeKnowledge1","AwsCliCheatsheet","spellCheck","ArticlesWorthReading","UpdatingNestedJavascript","JSON","stringify","11","name","age","12","MigratingToReactTable","MigratingtoreactTable1","MigratingtoreactTable2","migratingtoreactTable3","IssuesDevTeam","CreateUserinSQL","SecureConnectionDB","SecureConnectionDB1","SecureConnectionDB2","routes","title","slug_title","summary","status","created_at","updated_at","sort","a","b","ListArticles","useState","loading","setLoading","useEffect","CircularProgress","article","articleDate","split","chipStyle","trim","ShowArticle","window","scrollTo","exact","path","Article","ListJournal","ShowJournal","Journal","Eisei","eisei","NepseApi","nepse","NamecheapApi","namecheap1","namecheap2","dockerImage","ListProject","ShowProject","Project","stack","paddingLeft","stackList","staclListDetails","Stack","App","setDarkMode","darkTheme","createTheme","palette","type","primary","main","secondary","background","default","typography","fontFamily","ThemeProvider","CssBaseline","basename","Articles","padding","contentBody","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAAe,MAA0B,mC,yDCkF1BA,EAxEA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvBC,EAAUC,IACVC,EAAUC,cAOhB,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAEE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAACC,EAAA,EAAD,CAAQC,UAAWb,EAAQc,MAAOC,IAAI,aAAaC,IAAKC,QAK5D,eAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAA9B,UACE,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAIV,GAAI,GAAvB,SACE,eAACW,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,UACE,sBAAMT,UAAWb,EAAQuB,OAAQC,QAnBxB,WACnBC,QAAQC,IAAI,WACZxB,EAAQyB,KAAK,MAiBH,0BAGA,sBAAMC,MAAO,CAAEC,OAAQ,UAAWC,WAAY,QAA9C,SACG/B,EACC,cAAC,IAAD,CAAiByB,QAAS1B,IAE1B,cAAC,IAAD,CAAiB0B,QAAS1B,WAMlC,eAACM,EAAA,EAAD,CAAMG,MAAI,EAACW,GAAI,GAAIV,GAAI,GAAIK,UAAWb,EAAQ+B,iBAA9C,UACE,cAAC,IAAD,CACElB,UAAWb,EAAQgC,SACnBrB,GAAG,YACHsB,gBAAiBjC,EAAQkC,OAH3B,sBAOA,cAAC,IAAD,CACErB,UAAWb,EAAQgC,SACnBrB,GAAG,YACHsB,gBAAiBjC,EAAQkC,OAH3B,sBAOA,cAAC,IAAD,CACErB,UAAWb,EAAQgC,SACnBrB,GAAG,SACHsB,gBAAiBjC,EAAQkC,OAH3B,mBAOA,cAAC,IAAD,CACErB,UAAWb,EAAQgC,SACnBrB,GAAG,WACHsB,gBAAiBjC,EAAQkC,OAH3B,iCAgBNjC,EAAYkC,YAAW,CAC3BrB,MAAO,CACLsB,MAAO,QACPC,OAAQ,SAEVN,iBAAkB,CAChBO,OAAQ,UAEVN,SAAU,CACRO,YAAa,OACbC,eAAgB,OAChBC,WAAY,MACZC,MAAO,UACP,UAAW,CACTA,MAAO,YAGXR,OAAQ,CACNQ,MAAO,WAETnB,OAAQ,CACNoB,SAAU,WACVF,WAAY,MACZ,UAAW,CACTC,MAAO,UACPb,OAAQ,c,kCCvGR5B,EAAYkC,aAAW,SAACS,GAAD,MAAY,CACvCC,QAAS,CACPC,YAAa,MACb,MAAM,aACJC,aAAc,MACbH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BF,aAAc,SAIpBG,MAAO,CACLR,MAAO,UACP,UAAW,CACTA,MAAO,gBAoEES,EA/DD,WACZ,IAAMnD,EAAUC,IAChB,OACE,sBAAKY,UAAWb,EAAQ6C,QAAxB,UACE,wPAIU,IAEN,cAAC,IAAD,CAAMlC,GAAG,SAASE,UAAWb,EAAQkD,MAArC,mBAGA,IATJ,cAaA,yDAC2B,IACzB,mBACEE,KAAK,0BACLC,OAAO,SACPxC,UAAWb,EAAQkD,MACnBI,IAAI,aAJN,wBAFF,8MAeA,qKAIA,oDACsB,IACpB,mBAAGF,KAAK,wBAAwBvC,UAAWb,EAAQkD,MAAnD,2BAEK,OAGP,mBACEE,KAAK,sDACLC,OAAO,SACPC,IAAI,aACJzC,UAAS,UAAKb,EAAQkD,MAAb,SAJX,SAME,cAAC,IAAD,MAEF,mBACEE,KAAK,iCACLC,OAAO,SACPC,IAAI,aACJzC,UAAWb,EAAQkD,MAJrB,SAME,cAAC,IAAD,UC3EOK,EAJA,WACb,OAAO,0C,kCCHM,MAA0B,gDCiH1BC,EA3GY,WACzB,IAAIC,EAAO,CAAC,OACNzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,mCAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,WAMG,IAAIY,MAAOC,eACXH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAIN,oCACE,4PAOA,sBAAKK,MAAM,YAAYC,WAAW,QAAlC,kEACuD,uBADvD,mDAIA,4BACE,yBAEF,+QAMA,4BACE,qBAAKrD,IAAKsD,EAAqBvD,IAAI,aAErC,sBACA,4BACE,yBAEF,8PAMA,4BACE,yBAEF,2GAIA,+BACE,mIAIA,qJAIA,0KAKF,4BACE,yBAEF,gMAKA,sBAAKqD,MAAM,YAAYC,WAAW,QAAlC,2EACgE,uBADhE,0BAE+B,uBAF/B,qDAGoD,uBAHpD,oEAaFpE,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WCjBGiC,EAhGU,WACvB,IAAId,EAAO,CAAC,MAAO,KAAM,WACnBzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,uCAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAIN,kCACE,eAAC5C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MAAMC,cAAY,EAAxD,UACE,8VAQA,6CACA,qBAAKT,UAAU,YAAY2D,WAAW,QAAtC,uBAIA,uDACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,wCAIA,8CACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,iEAIA,8CACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,gDAIA,4DACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,6IAKA,+DACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,uGAKA,iDACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,iGAKA,yDACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,uEAIA,iEACA,qBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,gEAWJvE,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WCkCGmC,EAvIc,WAC3B,IAAIhB,EAAO,CAAC,OACNzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,oCAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAGN,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,UAAUsC,QAAQ,QAAtC,SACE,cAACM,EAAA,EAAD,CACEC,KAAK,QACLC,MAAK,mBAAc,IAAIP,KAAK,cAAcC,gBAC1ClB,MAAM,YACN7B,UAAWb,EAAQmE,UAKvB,oCACE,mGACqE,IACnE,mBACEf,KAAK,gCACLE,IAAI,sBACJD,OAAO,SAHT,wBAMK,IARP,4JAaA,+BACE,6BACE,mBACED,KAAK,qDACLE,IAAI,sBACJD,OAAO,SAHT,2BAQF,6BACE,mBACED,KAAK,mBACLE,IAAI,sBACJD,OAAO,SAHT,mDAQF,6BACE,mBACED,KAAK,+CACLE,IAAI,sBACJD,OAAO,SAHT,+CAQF,6BACE,mBACED,KAAK,gGACLE,IAAI,sBACJD,OAAO,SAHT,mEAQF,6BACE,mBACED,KAAK,6DACLE,IAAI,sBACJD,OAAO,SAHT,gEAQF,6BACE,mBACED,KAAK,sEACLE,IAAI,sBACJD,OAAO,SAHT,kCAQF,6BACE,mBACED,KAAK,0FACLE,IAAI,sBACJD,OAAO,SAHT,yDAQF,6BACE,mBACED,KAAK,8GACLE,IAAI,sBACJD,OAAO,SAHT,0DAgBNpD,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WCxBGoC,EApHkB,WAC/B,IAAIjB,EAAO,CAAC,cACNzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,oDAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAcN,oCACE,ySAOA,mLAMA,0CACA,4BACE,sBAAKlD,UAAU,YAAY2D,WAAW,QAAtC,uBAEGG,KAAKC,UACJ,CACEC,GAAI,CACFC,KAAM,SACNV,MAAO,EACPW,IAAK,IAEPC,GAAI,CACFF,KAAM,OACNV,MAAO,EACPW,IAAK,IAGT,KACA,GAEF,uBACA,uBAnBF,gBAqBGJ,KAAKC,UACJ,CACEI,GAAI,CACFF,KAAM,OACNV,MAAO,EACPW,IAAK,IAGT,KACA,GAEF,uBAhCF,4CAiCyC,uBAjCzC,yBAsCF,yCACA,8BACE,qBAAKlE,UAAU,YAAY2D,WAAW,QAAtC,SACGG,KAAKC,UACJ,CACEC,GAAI,CAAEC,KAAM,SAAUV,MAAO,EAAGW,IAAK,IACrCC,GAAI,CAAEF,KAAM,OAAQV,MAAO,EAAGW,IAAK,IAErC,KACA,KAGJ,iCASJ9E,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WC9HG,MAA0B,mDCA1B,MAA0B,mDCA1B,MAA0B,oDCsK1B2C,EA9Je,WAC5B,IAAIxB,EAAO,CAAC,QAAS,gBACfzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,0DAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAGN,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,UAAUsC,QAAQ,QAAtC,SACE,cAACM,EAAA,EAAD,CACEC,KAAK,QACLC,MAAK,mBAAc,IAAIP,KAAK,cAAcC,gBAC1ClB,MAAM,YACN7B,UAAWb,EAAQmE,UAKvB,oCACE,gPAIM,gEAJN,iIAQA,+BACE,mEACA,oGAGA,+DAGF,qBAAKnD,IAAKkE,EAAwBnE,IAAI,oBAEtC,4BACE,yBAEF,gJAE6C,IAC3C,mBACEqC,KAAK,+DACLE,IAAI,sBACJD,OAAO,SAHT,SAKE,2DACG,IATP,+EAaA,iKAIA,+BACE,uCACA,uDAEF,4BACE,mBACED,KAAK,4BACLE,IAAI,sBACJD,OAAO,SAHT,sCAQF,4BACE,yBAEF,gaAQA,4BACE,yBAEF,wIAEuC,IACrC,mBACED,KAAK,2CACLE,IAAI,sBACJD,OAAO,SAHT,SAKE,4CAEF,uCAVF,kFAcA,qBAAKrC,IAAKmE,EAAwBpE,IAAI,oBAEtC,8EACA,4BACE,yBAEF,qDACA,4eAUA,4BACE,mBACEqC,KAAK,4BACLE,IAAI,sBACJD,OAAO,SAHT,oCAQF,qBACErC,IAAKoE,EACLrE,IAAI,kBACJa,MAAO,CAAEQ,MAAO,iBASpBnC,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WC5DG+C,EA1GO,WACpB,IAAI5B,EAAO,CAAC,OACNzD,EAAUC,IAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,oDAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAGN,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,UAAUsC,QAAQ,QAAtC,SACE,cAACM,EAAA,EAAD,CACEC,KAAK,QACLC,MAAK,mBAAc,IAAIP,KAAK,cAAcC,gBAC1ClB,MAAM,YACN7B,UAAWb,EAAQmE,UAKvB,oCACE,iXAOA,sFAEA,uBACA,0DACA,qiBAWA,+VAQA,yIAKA,uBACA,yEACA,4OAKA,uBACA,8DACA,+KAGM,kEAHN,gJAQA,uBACA,4CACA,mIAWFlE,EAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WC+BGgD,EA9IS,WACtB,IAAI7B,EAAO,CAAC,WAAY,WAAY,aAAc,SAC5CzD,EAAUC,KAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,6DAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAIN,kCACE,eAAC5C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,MAAMC,cAAY,EAAxD,UACE,wZASA,2CACA,sBAAKT,UAAU,YAAY2D,WAAW,QAAtC,kCAEE,uBAFF,mCAIE,uBAJF,kEAME,uBANF,8DAQE,0BAGF,wCACA,sBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,6BAEE,uBAFF,8DAIE,uBAJF,0DAME,uBANF,oBAQE,0BAGF,mDACA,sBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,uCAEE,uBAFF,cAIE,uBAJF,YAME,uBANF,mEAQE,uBARF,yDAUE,uBAVF,+DAYE,uBAZF,iEAcE,uBAdF,iEAgBE,uBAhBF,4BAkBE,uBAlBF,WAmBU,uBAnBV,eAoBc,uBApBd,+BAsBE,uBAtBF,wCAuBuC,uBAvBvC,eA0BA,sBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,8BAEE,uBACA,uBAHF,kCAKE,uBALF,yDAOE,uBAPF,yEAUE,uBAVF,mCAYE,uBAZF,iDAcE,uBAdF,6DAgBE,0BAGF,sBAAK3D,UAAU,YAAY2D,WAAW,QAAtC,+BAEE,uBACA,uBAHF,2DAKE,uBALF,wDAOE,uBAPF,WASE,uBATF,yDAWE,uBAXF,mCAaE,uBAbF,oCAeE,uBAfF,uEAkBE,uBAlBF,wDAoBE,mCAUNvE,GAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WCxJG,OAA0B,gDCA1B,OAA0B,gDCsF1BiD,GA/EY,WACzB,IAAI9B,EAAO,CAAC,WAAY,WAAY,WAC9BzD,EAAUC,KAEhB,OACE,eAAC,WAAD,WAEE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,+DAKA,eAACvB,EAAA,EAAD,CACEC,QAAQ,UACRsC,QAAQ,QACR9B,MAAO,CAAEmB,aAAc,QAHzB,UAMG,IAAIY,KAAK,cAAcC,eACvBH,EAAKI,OAAS,EACXJ,EAAKK,KAAI,SAACvD,EAAMwD,GAAP,OACP,cAACC,EAAA,EAAD,CAEEC,KAAK,QACLC,MAAO3D,EACPmC,MAAM,YACN7B,UAAWb,EAAQmE,OAJdJ,MAOT,QAGN,cAAC5C,EAAA,EAAD,CAAYC,QAAQ,UAAUsC,QAAQ,QAAtC,SACE,cAACM,EAAA,EAAD,CACEC,KAAK,QACLC,MAAK,mBAAc,IAAIP,KAAK,cAAcC,gBAC1ClB,MAAM,YACN7B,UAAWb,EAAQmE,UAKvB,oCACE,mPAMA,giBAWA,mXAOA,qBAAKnD,IAAKwE,GAAqBzE,IAAI,oBACnC,gGACA,qBAAKC,IAAKyE,GAAqB1E,IAAI,oBAEnC,uGACyE,cAS3Ed,GAAYkC,YAAW,CAC3BgC,MAAO,CACLxB,SAAU,QACVL,OAAQ,WCcCoD,GAhGQ,CACnB,CACEC,MAAO,kDACPC,WAAY,4CACZC,QAAS,oDACTpC,KAAM,wCACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWiE,GAEb,CACEK,MAAO,4BACPC,WAAY,4BACZC,QAAS,oDACTpC,KAAM,mBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWkD,GAEb,CACEoB,MAAO,yBACPC,WAAY,yBACZC,QACE,4HACFpC,KAAM,mBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWoD,GAEb,CACEkB,MAAO,yCACPC,WAAY,2CACZC,QAAS,2DACTpC,KAAM,aACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWqD,GAEb,CACEiB,MAAO,+CACPC,WAAY,iDACZC,QACE,+OACFpC,KAAM,sBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAW4D,GAEb,CACEU,MAAO,oDACPC,WAAY,oDACZC,QACE,qGACFpC,KAAM,8BACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWkE,IAEb,CACEI,MAAO,yCACPC,WAAY,yCACZC,QAAS,yCACTpC,KAAM,gBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWgE,GAEb,CACEM,MAAO,wBACPC,WAAY,0BACZC,QAAS,gDACTpC,KAAM,MACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWmC,IAcayC,MAVJ,SAACC,EAAGC,GAC1B,OAAID,EAAEH,WAAaI,EAAEJ,YACX,EAENG,EAAEH,WAAaI,EAAEJ,WACZ,EAEF,KCtBMK,GAtEM,WACnB,IAAMpG,EAAUC,KADS,EAEKoG,oBAAS,GAFd,mBAElBC,EAFkB,KAETC,EAFS,KAIzBC,qBAAU,WACRD,GAAW,KACV,IAmBH,OAAID,EAEA,iCACE,cAACG,EAAA,EAAD,CAAkB5F,UAAU,WAMhC,cAAC,WAAD,UAEG6E,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,sBAAKlD,UAAWb,EAAQ0G,QAAxB,UACE,sBAAK7F,UAAWb,EAAQ2G,YAAxB,UACG,IAAIhD,KAAKpD,EAAKwF,YAAYnC,eAC3B,sBAAM/C,UAAU,OAAhB,UAhCQ4C,EAgCyBlD,EAAKkD,KA/BzCA,GAAiB,OAATA,EAINA,EACJmD,MAAM,KACN9C,KAAI,SAACvD,EAAMwD,GAAP,OACH,cAACC,EAAA,EAAD,CAEEnD,UAAS,UAAKb,EAAQ6G,UAAb,SACT3C,MAAO3D,EAAKuG,OACZ7C,KAAK,SAHAF,MAPF,WAiCH,cAAC,IAAD,CAAMpD,GAAE,oBAAeJ,EAAKqF,YAAc/E,UAAWb,EAAQkD,MAA7D,SACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,SACGnC,EAAKoF,UAIV,cAACxE,EAAA,EAAD,CAAYC,QAAQ,QAAQE,cAAY,EAAxC,SACGf,EAAKsF,UAGR,cAAC,IAAD,CAAMlF,GAAE,oBAAeJ,EAAKqF,YAAc/E,UAAWb,EAAQkD,MAA7D,SACE,eAAC/B,EAAA,EAAD,CAAYG,cAAY,EAACoB,MAAM,UAA/B,8BAEE,cAAC,IAAD,CACEtB,QAAQ,WACRQ,MAAO,CAAEmB,aAAc,QAASjB,WAAY,iBArBdiC,GA7B3B,IAACN,QAgEdxD,GAAYkC,YAAW,CAC3BuE,QAAS,CACP3D,aAAc,QAEhB4D,YAAa,CACXhE,SAAU,OACVF,WAAY,MACZC,MAAO,WAETQ,MAAO,CACLV,eAAgB,OAChB,aAAc,CACZE,MAAO,WAET,YAAa,CACXA,MAAO,YAGXmE,UAAW,CACTlE,SAAU,OACVF,WAAY,SACZ,WAAY,CACVC,MAAO,OACPb,OAAQ,cCjFCkF,GApBK,WAIlB,OAHAP,qBAAU,WACRQ,OAAOC,SAAS,EAAG,KAClB,IAED,eAAC,IAAD,WACGvB,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,cAAC,IAAD,CACEmD,OAAK,EACLC,KAAI,oBAAe5G,EAAKqF,YACxBvE,UAAWd,EAAKc,WACX0C,MAIT,cAAC,IAAD,CAAUpD,GAAG,kBCJJyG,GATC,WACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAY9F,UAAW+E,KACzC,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,kBAAkB9F,UAAW0F,SC2BxCrB,GAlCQ,CACnB,CACEC,MAAO,kBACPC,WAAY,kBACZC,QAAS,oDACTpC,KAAM,mBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UCVa,WACf,OAAO,0CDYP,CACEsE,MAAO,wBACPC,WAAY,0BACZC,QAAS,gDACTpC,KAAM,MACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UErBiB,WACnB,OAAO,+CFkCmB4E,MAVJ,SAACC,EAAGC,GAC1B,OAAID,EAAEH,WAAaI,EAAEJ,YACX,EAENG,EAAEH,WAAaI,EAAEJ,WACZ,EAEF,KGHMsB,GAxBK,WAClB,IAAMrH,EAAUC,KAEhB,OACE,cAAC,WAAD,UAEGyF,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,sBAAKlD,UAAWb,EAAQ0G,QAAxB,UACE,cAAC,IAAD,CAAM/F,GAAE,mBAAcJ,EAAKqF,YAAc/E,UAAWb,EAAQkD,MAA5D,SACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,SACGnC,EAAKoF,UAGV,qBAAK9E,UAAWb,EAAQ2G,YAAxB,SACG,IAAIhD,KAAKpD,EAAKwF,YAAYnC,mBAPOG,SAmBxC9D,GAAYkC,YAAW,CAC3BuE,QAAS,CACP3D,aAAc,QAEhB4D,YAAa,CACXhE,SAAU,OACVF,WAAY,MACZC,MAAO,WAETQ,MAAO,CACLV,eAAgB,OAChB,aAAc,CACZE,MAAO,WAET,YAAa,CACXA,MAAO,YAGXmE,UAAW,CACTlE,SAAU,OACVF,WAAY,SACZ,WAAY,CACVC,MAAO,OACPb,OAAQ,cCnCCyF,GAjBK,WAClB,OACE,eAAC,IAAD,WACG5B,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,cAAC,IAAD,CACEmD,OAAK,EACLC,KAAI,mBAAc5G,EAAKqF,YACvBvE,UAAWd,EAAKc,WACX0C,MAIT,cAAC,IAAD,CAAUpD,GAAG,kBCDJ4G,GATC,WACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,WAAW9F,UAAWgG,KACxC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiB9F,UAAWiG,SCVrC,OAA0B,mCC6D1BE,GAzDD,WACZ,OACE,oCACE,cAACrG,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,4CAGA,gCACE,gPAIK,IACH,mBACEU,KAAK,yCACLE,IAAI,sBACJD,OAAO,SAHT,+BAMK,IAXP,+PAkBA,yEACA,+BACE,2CACY,IACV,mBACED,KAAK,gFACLE,IAAI,sBACJD,OAAO,SAHT,8BAQF,2CACY,IACV,mBACED,KAAK,gFACLE,IAAI,sBACJD,OAAO,SAHT,iCASJ,8BACE,qBAAKrC,IAAKyG,GAAO1G,IAAI,eACrB,iCCtDK,OAA0B,kCCuC1B2G,GAnCE,WACf,OACE,oCACE,cAACvG,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,uBAGA,0JAIA,+BACE,8CACA,6CACA,gDAEF,4BACE,yBAEF,4BACE,qBAAK1B,IAAK2G,GAAO5G,IAAI,qBAEvB,yDAC2B,IACzB,mBACEqC,KAAK,2CACLE,IAAI,sBACJD,OAAO,SAHT,8BC3BO,OAA0B,uCCA1B,OAA0B,uCCoD1BuE,GA/CM,WACnB,OACE,oCACE,cAACzG,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,2BAIA,8cAUA,4LAGkB,IAChB,mBACEU,KAAK,iDACLE,IAAI,sBACJD,OAAO,SAHT,iBAMK,IAVP,oBAaA,+BACE,kFACA,2EACA,8DAGF,4BACE,qBAAKrC,IAAK6G,GAAY9G,IAAI,qBAG5B,4BACE,qBAAKC,IAAK8G,GAAY/G,IAAI,yBC9CnB,OAA0B,oCCuD5B2E,GAlDQ,CACnB,CACEC,MAAO,YACPC,WAAY,YACZnC,KAAM,mBACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWqG,IAGb,CACE/B,MAAO,iCACPC,WAAY,QACZnC,KAAM,MACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWmG,IAEb,CACE7B,MAAO,gBACPC,WAAY,gBACZnC,KAAM,MACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UAAWuG,IAEb,CACEjC,MAAO,sCACPC,WAAY,sCACZnC,KAAM,SACNqC,OAAQ,UACRC,WAAY,aACZC,WAAY,aACZ3E,UCrCgB,WAClB,OACE,oCACE,cAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,kDAGA,gCACE,oTAQA,qLAIE,+BACE,wGAIA,iFATJ,+IAeA,8BACE,qBAAK1B,IAAK+G,GAAahH,IAAI,qBAC3B,mCDmBkBkF,MAVJ,SAACC,EAAGC,GAC1B,OAAID,EAAEH,WAAaI,EAAEJ,YACX,EAENG,EAAEH,WAAaI,EAAEJ,WACZ,EAEF,KErBMiC,GAxBK,WAClB,IAAMhI,EAAUC,KAEhB,OACE,cAAC,WAAD,UAEGyF,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,sBAAKlD,UAAWb,EAAQ0G,QAAxB,UACE,cAAC,IAAD,CAAM/F,GAAE,oBAAeJ,EAAKqF,YAAc/E,UAAWb,EAAQkD,MAA7D,SACE,cAAC/B,EAAA,EAAD,CAAYC,QAAQ,KAAKsB,MAAM,UAA/B,SACGnC,EAAKoF,UAGV,qBAAK9E,UAAWb,EAAQ2G,YAAxB,SACG,IAAIhD,KAAKpD,EAAKwF,YAAYnC,mBAPOG,SAmBxC9D,GAAYkC,YAAW,CAC3BuE,QAAS,CACP3D,aAAc,QAEhB4D,YAAa,CACXhE,SAAU,OACVF,WAAY,MACZC,MAAO,WAETQ,MAAO,CACLV,eAAgB,OAChB,aAAc,CACZE,MAAO,WAET,YAAa,CACXA,MAAO,YAGXmE,UAAW,CACTlE,SAAU,OACVF,WAAY,SACZ,WAAY,CACVC,MAAO,OACPb,OAAQ,cCnCCoG,GAjBK,WAClB,OACE,eAAC,IAAD,WACGvC,GAAO5B,KAAI,SAACvD,EAAMwD,GAAP,OACV,cAAC,IAAD,CACEmD,OAAK,EACLC,KAAI,oBAAe5G,EAAKqF,YACxBvE,UAAWd,EAAKc,WACX0C,MAIT,cAAC,IAAD,CAAUpD,GAAG,kBCDJuH,GATC,WACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOhB,OAAK,EAACC,KAAK,YAAY9F,UAAW2G,KACzC,cAAC,IAAD,CAAOd,OAAK,EAACC,KAAK,kBAAkB9F,UAAW4G,SCP/ChI,GAAYkC,YAAW,CAC3BgG,MAAO,CACLC,YAAa,QAEfC,UAAW,CACT7F,eAAgB,aAElB8F,iBAAkB,CAChBhG,OAAQ,QACRS,aAAc,QAEhBG,MAAO,CACLR,MAAO,aAyII6F,GArID,WACZ,IAAMvI,EAAUC,KAChB,OACE,eAAC,WAAD,WACE,uCACA,yGAIA,6CACA,qBAAIY,UAAWb,EAAQmI,MAAvB,UACE,oBAAItH,UAAWb,EAAQqI,UAAvB,qBACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,kLAMA,oBAAIzH,UAAWb,EAAQqI,UAAvB,0BACA,sBAAKxH,UAAWb,EAAQsI,iBAAxB,wIAGE,4BACE,mBACElF,KAAK,uDACLC,OAAO,SACPxC,UAAWb,EAAQkD,MACnBI,IAAI,aAJN,mCAWJ,oBAAIzC,UAAWb,EAAQqI,UAAvB,8BACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,sRAOA,oBAAIzH,UAAWb,EAAQqI,UAAvB,qBACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,wKAOF,0CACA,qBAAIzH,UAAWb,EAAQmI,MAAvB,UACE,oBAAItH,UAAWb,EAAQqI,UAAvB,sBACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,qOAOA,oBAAIzH,UAAWb,EAAQqI,UAAvB,2BACA,qBAAIxH,UAAWb,EAAQmI,MAAvB,UACE,6CACA,mBAAGtH,UAAWb,EAAQsI,iBAAtB,kKAMA,2CACA,mBAAGzH,UAAWb,EAAQsI,iBAAtB,iMAQJ,yCACA,qBAAIzH,UAAWb,EAAQmI,MAAvB,UACE,oBAAItH,UAAWb,EAAQqI,UAAvB,iCACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,gcAUA,mBAAGzH,UAAWb,EAAQsI,iBAAtB,gMAMA,oBAAIzH,UAAWb,EAAQqI,UAAvB,sBACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,iPAQF,yCACA,+BACE,oBAAIzH,UAAWb,EAAQqI,UAAvB,uBACA,sBAAKxH,UAAWb,EAAQsI,iBAAxB,wIAGE,4BACE,mBACElF,KAAK,+CACLC,OAAO,SACPxC,UAAWb,EAAQkD,MACnBI,IAAI,aAJN,qCAUJ,oBAAIzC,UAAWb,EAAQqI,UAAvB,2BACA,mBAAGxH,UAAWb,EAAQsI,iBAAtB,qHCxEOE,GApDH,WACV,IAAMxI,EAAUC,KADA,EAEgBoG,oBAAS,GAFzB,mBAETtG,EAFS,KAEC0I,EAFD,KAGVC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM9I,EAAW,OAAS,QAC1B+I,QAAS,CACPC,KAAMhJ,EAAW,OAAS,QAE5BiJ,UAAW,CACTD,KAAM,WAERE,WAAY,CACVC,QAASnJ,EAAW,UAAY,SAGpCoJ,WAAY,CACVC,WAAY,SACZzG,SAAU,MAUd,OACE,eAAC0G,EAAA,EAAD,CAAezG,MAAO8F,EAAtB,UACE,cAACY,EAAA,EAAD,IAEA,cAAC,IAAD,CAAQC,SAAS,GAAjB,SACE,sBAAK1I,UAAWb,EAAQK,UAAxB,UACE,cAAC,EAAD,CAAQP,YAXI,WAClB2B,QAAQC,IAAI3B,GACZ0I,GAAa1I,IAS2BA,SAAUA,IAC5C,qBAAKc,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,IAAI9F,UAAW8B,IACjC,cAAC,IAAD,CAAOgE,KAAK,UAAU9F,UAAWkC,IACjC,cAAC,IAAD,CAAO4D,KAAK,YAAY9F,UAAWmI,KACnC,cAAC,IAAD,CAAOrC,KAAK,WAAW9F,UAAWkG,KAClC,cAAC,IAAD,CAAOJ,KAAK,YAAY9F,UAAW6G,KACnC,cAAC,IAAD,CAAOf,KAAK,SAAS9F,UAAWkH,KAChC,cAAC,IAAD,CAAU5H,GAAG,oBAWrBV,GAAYkC,aAAW,SAACS,GAAD,YAAY,CACvCvC,WAAS,GACPiC,OAAQ,SACRF,MAAO,MACPqH,QAAS,MAHF,cAIN7G,EAAMI,YAAYC,KAAK,MAAQ,CAC9Bb,MAAO,SALF,yBAOG,QAPH,2BAQK,UARL,GAUTsH,YAAa,CACXC,UAAW,cChFfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e3f5fb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/budash.f2e6a11e.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Budash from \"../../assets/budash.jpg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Navbar = ({ changeTheme, darkMode }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const redirectHome = () => {\n    console.log(\"go home\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {/*Avatar grid*/}\n        <Grid item sm={6} md={3} lg={2}>\n          <Link to=\"/\">\n            <Avatar className={classes.large} alt=\"Remy Sharp\" src={Budash} />\n          </Link>\n        </Grid>\n\n        {/*Navlink container*/}\n        <Grid item sm={12} md={9} lg={10}>\n          <Grid item xs={10} sm={10}>\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n              <span className={classes.author} onClick={redirectHome}>\n                Bishal Udash\n              </span>\n              <span style={{ cursor: \"pointer\", marginLeft: \"20px\" }}>\n                {darkMode ? (\n                  <Brightness7Icon onClick={changeTheme} />\n                ) : (\n                  <Brightness4Icon onClick={changeTheme} />\n                )}\n              </span>\n            </Typography>\n          </Grid>\n\n          <Grid item xs={10} sm={10} className={classes.navLinkContainer}>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/articles\"\n              activeClassName={classes.active}\n            >\n              Articles\n            </NavLink>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/projects\"\n              activeClassName={classes.active}\n            >\n              Projects\n            </NavLink>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/stack\"\n              activeClassName={classes.active}\n            >\n              Stack\n            </NavLink>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/journal\"\n              activeClassName={classes.active}\n            >\n              Journal\n            </NavLink>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Navbar;\n\nconst useStyles = makeStyles({\n  large: {\n    width: \"120px\",\n    height: \"120px\",\n  },\n  navLinkContainer: {\n    margin: \"1rem 0\",\n  },\n  navlinks: {\n    marginRight: \"20px\",\n    textDecoration: \"none\",\n    fontWeight: \"500\",\n    color: \"#676767\",\n    \"&:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  active: {\n    color: \"#e57373\",\n  },\n  author: {\n    fontSize: \"xx-large\",\n    fontWeight: \"600\",\n    \"&:hover\": {\n      color: \"#e57373\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    wordSpacing: \"2px\",\n    \"& p\": {\n      marginBottom: \"5%\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: \"10%\",\n      },\n    },\n  },\n  links: {\n    color: \"inherit\",\n    \"&:hover\": {\n      color: \"#e57373\",\n    },\n  },\n}));\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.content}>\n      <p>\n        Hi, I'm Bishal! I'm a full-stack engineer with a passion for building\n        beautiful things from scratch. I've been building websites and saas\n        services since 2017. I love working with React and Laravel more about\n        them in{\" \"}\n        {\n          <Link to=\"/stack\" className={classes.links}>\n            Stack\n          </Link>\n        }{\" \"}\n        section.\n      </p>\n\n      <p>\n        Right now I'm working at{\" \"}\n        <a\n          href=\"https://wolfmatrix.com/\"\n          target=\"_blank\"\n          className={classes.links}\n          rel=\"noreferrer\"\n        >\n          Wolfmatrix\n        </a>\n        , software development company established in Nepal with the mission to\n        make every business better by understanding its requirement and\n        providing a custom system or technical solution and partnership.\n      </p>\n\n      <p>\n        I work on challenging projects and I enjoy writing about it. I\n        occasionally make myself available for contract work and consultancy.\n      </p>\n      <p>\n        You can reach me at{\" \"}\n        <a href=\"mailto: me@budash.net\" className={classes.links}>\n          me@budash.net\n        </a>{\" \"}\n      </p>\n\n      <a\n        href=\"https://www.linkedin.com/in/bishal-udash-04a07215a/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={`${classes.links} mr-2`}\n      >\n        <LinkedInIcon />\n      </a>\n      <a\n        href=\"https://github.com/bishaludash\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={classes.links}\n      >\n        <GitHubIcon />\n      </a>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Resume = () => {\n  return <div>Resume</div>;\n};\n\nexport default Resume;\n","export default __webpack_public_path__ + \"static/media/GitMeSomeKnowledge1.7ffb8982.png\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitMeSomeKnowledge1 from \"./images/GitMeSomeKnowledge1.png\";\n\nconst GitMeSomeKnowledge = () => {\n  let tags = [\"git\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Git me some knowledge\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date().toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <p>\n          Due to covid-19, I had been working from home (wfh) for almost a year\n          and using my personal laptop for office works. At the beginning of wfh\n          , I remembering setting up my office email for setting up git config\n          globally.\n        </p>\n\n        <pre class=\"ql-syntax\" spellcheck=\"false\">\n          git config --global user.name \"Your global username\" <br />\n          git config --global user.email \"office email\"\n        </pre>\n        <p>\n          <br />\n        </p>\n        <p>\n          Things were working okay, and after some months I began working on\n          some side projects, made some commits and pushed it to GitHub. Then i\n          went to check into GitHub on repo status and noticed that my timeline\n          was not reflecting any commits.\n        </p>\n        <p>\n          <img src={GitMeSomeKnowledge1} alt=\"Github\" />\n        </p>\n        <p></p>\n        <p>\n          <br />\n        </p>\n        <p>\n          From November to early January, the commits timeline was empty. I\n          searched some posts over stack overflow &amp; google and found out the\n          cause for this was my git's globally configured email was different\n          than that of GitHub.\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          Found out Git offers other ways on how you can set you username and\n          email.\n        </p>\n        <ol>\n          <li>\n            project - The data is stored directly in the corresponding\n            project(repository) under .git/config.\n          </li>\n          <li>\n            global - for all repositories of the current user. The config file\n            can be found in your home directory ~/gitconfig.\n          </li>\n          <li>\n            system - This is a system wide configuration and is available for\n            all users and all repositories. You will find it in /etc/gitconfig.\n          </li>\n        </ol>\n        <p>\n          <br />\n        </p>\n        <p>\n          In my case, I set my GitHub's email as global config value and used\n          work email for work specific configuration.Set the username/email for\n          a specific repository\n        </p>\n        <pre class=\"ql-syntax\" spellcheck=\"false\">\n          # change directory to project directory and run command below <br />\n          cd &lt;project/directory&gt; <br />\n          git config user.name \"Your project specific name\" <br />\n          git config user.email \"your@project-specific-email.com\"\n        </pre>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default GitMeSomeKnowledge;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst AwsCliCheatsheet = () => {\n  let tags = [\"aws\", \"s3\", \"aws cli\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        AWS Cli cheatsheet for S3\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-10-20\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <Typography variant=\"body2\" component=\"div\" gutterBottom>\n          <p>\n            S3 buckets can be accessed via aws web console and aws cli. If\n            developers are experienced with the aws cli tools, they can easily\n            perform wide range of actions ie. make &amp; remove bucket, download\n            &amp; upload files , list all buckets, files and more never leaving\n            the terminal. Below is list of useful cli commands for S3.\n          </p>\n\n          <p>List Buckets</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 ls\n          </pre>\n\n          <p>List files in a Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 ls s3://bucket-name\n          </pre>\n\n          <p>Create Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 mb s3://bucket-name make_bucket: bucket-name\n          </pre>\n\n          <p>Delete Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 rb s3://bucket-name --force\n          </pre>\n\n          <p>Download S3 object to local</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 cp s3://bucket-name/file.txt ~/Desktop/file.txt download:\n            ./backup.tar from s3://bucket-name/file.txt to Dextop/file.txt\n          </pre>\n\n          <p>Upload local file as S3 object</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 cp backup.tar s3://bucket-name upload: ./backup.tar to\n            s3://bucket-name/backup.tar\n          </pre>\n\n          <p>Delete S3 object</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 rm s3://bucket-name/secret-file.gz . delete:\n            s3://bucket-name/secret-file.gz\n          </pre>\n\n          <p>Download bucket to local</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 sync s3://bucket-name/ /media/pasport-ultra/backup\n          </pre>\n\n          <p>Upload local directory to bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 sync (directory) s3://bucket-name/\n          </pre>\n        </Typography>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default AwsCliCheatsheet;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst ArticlesWorthReading = () => {\n  let tags = [\"git\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Articles worth reading\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-09-02\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      <Typography variant=\"caption\" display=\"block\">\n        <Chip\n          size=\"small\"\n          label={`Edited : ${new Date(\"2021-11-11\").toDateString()}`}\n          color=\"secondary\"\n          className={classes.pills}\n        />\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <p>\n          Here is a list of articles that I stumbled upon when going through{\" \"}\n          <a\n            href=\"https://news.ycombinator.com/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Hackernews\n          </a>{\" \"}\n          and surfing the web that are worth reading. I found these articles to\n          be resourceful and learned from them so I will keep adding new once to\n          the list.\n        </p>\n        <ol>\n          <li>\n            <a\n              href=\"https://www.fredrikholmqvist.com/posts/why-erlang/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Why Erlang?\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hpbn.co/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              High Performance Browser Networking\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hakibenita.com/sql-for-data-analysis\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Practical SQL for Data Analysis\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://antonfisher.com/posts/2018/03/19/reducing-docker-image-size-of-a-node-js-application/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Reducing Docker image size of a Node.js application\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://web.eecs.utk.edu/~azh/blog/featurestheywanted.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              When users never use the features they asked for\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://ic.unicamp.br/~stolfi/bitcoin/2020-12-31-bitcoin-ponzi.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Bitcoin is a Ponzi\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.oreilly.com/library/view/oracle-distributed-systems/1565924320/ch01s04.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Multiple Schema Versus Multiple Databases\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hakibenita.com/postgresql-unknown-features#get-the-number-of-updated-and-inserted-rows-in-an-upsert\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Lesser Known PostgreSQL Features\n            </a>\n          </li>\n        </ol>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default ArticlesWorthReading;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst UpdatingNestedJavascript = () => {\n  let tags = [\"javascript\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Updating a nested object in Javascript\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-06-18\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      {/* Edited */}\n      {/* <Typography variant=\"caption\" display=\"block\">\n        <Chip\n          size=\"small\"\n          label={`Edited : ${new Date(\"2021-11-11\").toDateString()}`}\n          color=\"secondary\"\n          className={classes.pills}\n        />\n      </Typography> */}\n\n      {/*content*/}\n      <article>\n        <p>\n          I was required to update a key's value in single object withing a huge\n          object containing multiple objects. Using&nbsp;for loop&nbsp;was the\n          first option but it didn't seem efficient as we need to loo through\n          all the objects checking if thats the one we need to update.\n        </p>\n\n        <p>\n          Here comes spread operation to rescue, simply store the update object\n          in a variable and use it to update in the main object using spread\n          operator.\n        </p>\n\n        <p>Example :</p>\n        <p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            let data =\n            {JSON.stringify(\n              {\n                11: {\n                  name: \"bishal\",\n                  class: 5,\n                  age: 10,\n                },\n                12: {\n                  name: \"john\",\n                  class: 4,\n                  age: 9,\n                },\n              },\n              null,\n              4\n            )}\n            <br />\n            <br />\n            let newData =\n            {JSON.stringify(\n              {\n                12: {\n                  name: \"john\",\n                  class: 5,\n                  age: 9,\n                },\n              },\n              null,\n              4\n            )}\n            <br />\n            let test = {`{ ...data, ...newData }`};<br />\n            console.log(test)\n          </pre>\n        </p>\n\n        <p>Result :</p>\n        <p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            {JSON.stringify(\n              {\n                11: { name: \"bishal\", class: 5, age: 10 },\n                12: { name: \"john\", class: 5, age: 9 },\n              },\n              null,\n              4\n            )}\n          </pre>\n          <br />\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default UpdatingNestedJavascript;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/migratingtoreactTable1.9ac3c80b.png\";","export default __webpack_public_path__ + \"static/media/migratingtoreactTable2.59a904ac.png\";","export default __webpack_public_path__ + \"static/media/migratingtoreactTable3.7ed2a0c0.jpeg\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MigratingtoreactTable1 from \"./images/migratingtoreactTable1.png\";\nimport MigratingtoreactTable2 from \"./images/migratingtoreactTable2.png\";\nimport migratingtoreactTable3 from \"./images/migratingtoreactTable3.jpeg\";\n\nconst MigratingToReactTable = () => {\n  let tags = [\"React\", \"Optimization\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Migrating from Material-table to React-table\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-05-19\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      <Typography variant=\"caption\" display=\"block\">\n        <Chip\n          size=\"small\"\n          label={`Edited : ${new Date(\"2021-06-01\").toDateString()}`}\n          color=\"secondary\"\n          className={classes.pills}\n        />\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <p>\n          I had been noticing my simple website was taking 4-10 sec to load\n          completely on the first load. Its just one simple static about page\n          followed with 4 other links build on top of React, my first reaction\n          was <strong>how the hell it so slow ??</strong>. So I opened up the\n          Network tab in br/owser console, hard refreshed the website and\n          monitored it . below were my findings:\n        </p>\n        <ul>\n          <li>One of my chunk file size 1.7 MB.</li>\n          <li>\n            No content was being shown until that chunk file was fully loaded.\n          </li>\n          <li>My build size was ~9.6 MB.</li>\n        </ul>\n\n        <img src={MigratingtoreactTable1} alt=\"BigCo Inc. logo\" />\n\n        <p>\n          <br />\n        </p>\n        <p>\n          I knew the issue was because of large bundle size, so proceeded with\n          analyzing the bundle size for which I used{\" \"}\n          <a\n            href=\"https://create-react-app.dev/docs/analyzing-the-bundle-size/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <strong>source-map-explorer</strong>\n          </a>{\" \"}\n          package. The report result helped me determine why the bundle was so\n          big.\n        </p>\n        <p>\n          Material-table itself is a big packages and it has dependencies much\n          bigger which are left unused 99% of the time. Two package :\n        </p>\n        <ol>\n          <li>jspdf</li>\n          <li>react-beutiful-dnd</li>\n        </ol>\n        <p>\n          <a\n            href=\"https://imgur.com/eugJ8AG\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Package Analyze Result\n          </a>\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          The community has been requesting for Material-table to make these\n          packages optional since 2019 but not much has changed.So I searched\n          for alternatives and found react table to be dependable and am 100%\n          sure i will be using it for future projects. Right now I planning to\n          change the code base to use react-table but it will take time and will\n          update the post later with full updates,\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          So instead i made a simple optimization to speed up the project. I\n          have split the bundles using React's{\" \"}\n          <a\n            href=\"https://web.dev/code-splitting-suspense/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <strong>Lazy</strong>\n          </a>\n          <strong> </strong>method and it seems to have improved the page\n          loading speed down to 3-5 sec.\n        </p>\n\n        <img src={MigratingtoreactTable2} alt=\"BigCo Inc. logo\" />\n\n        <p>To be updated after migrating to React-table.</p>\n        <p>\n          <br />\n        </p>\n        <p>Update : 30 May 2021</p>\n        <p>\n          I have updated my code base by replacing material-table with\n          react-table, this has significantly reduced my build size. Before it\n          was 9.6 MB and now its 4.3 MB and now the website page size has\n          reduces from 1.7MB to 493KB and the page loads within 3-5 sec. I am\n          really pleased with the optimization result and will keep exploring\n          different ways to do so. My next thing on the list is to research and\n          implement React-query , a frontend based caching mechanism.\n        </p>\n\n        <p>\n          <a\n            href=\"https://imgur.com/vCeOr7c\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            New Package Analysis\n          </a>\n        </p>\n        <img\n          src={migratingtoreactTable3}\n          alt=\"BigCo Inc. logo\"\n          style={{ width: \"100%\" }}\n        />\n      </article>\n    </Fragment>\n  );\n};\n\nexport default MigratingToReactTable;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst IssuesDevTeam = () => {\n  let tags = [\"git\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Issues with building a stable Dev team\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-03-03\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      <Typography variant=\"caption\" display=\"block\">\n        <Chip\n          size=\"small\"\n          label={`Edited : ${new Date(\"2021-06-01\").toDateString()}`}\n          color=\"secondary\"\n          className={classes.pills}\n        />\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <p>\n          I have been working on a project for overseas Portuguese company for 5\n          months now, during this period 5 developers came and left. I had ups\n          and down during this period, had to cover for things more than i had\n          signed up for. Finally after 5 month, we have a stable team of 3\n          developers and in this article I want to share my experiences.\n        </p>\n        <p>Lets start with the factors effecting the developers:</p>\n\n        <br />\n        <h2>Covid and remote working</h2>\n        <p>\n          The team was new composed of me and 2 other devs (Devs A and B), due\n          to covid we all had to work remotely. We used discord for\n          communicating with the foreign team, and tasks were assigned to us via\n          chats or PMs. We devs would help each other when we could and I would\n          encourage them to ask confusion topics, logic to PT team but besides\n          that they were on their own. Since other devs were little\n          inexperienced , I talked in their behalf at beginning but I was told\n          not to do so as each dev should do it by themselves.\n        </p>\n\n        <p>\n          After a month, dev (A) got frustrated with his work and he left\n          without any pre-notice. He was not getting proper help from PT team ,\n          didn't raise his issues to related person. Similarly , dev (B) had\n          told the PT team guys , the requested feature was being done , but he\n          left in 2 month as soon as he got his paycheck.\n        </p>\n\n        <p>\n          I learned that remote work is feasible only when the team is already\n          stable and has proper work process.\n        </p>\n\n        <br />\n        <h2>Not hiring the right person for the job</h2>\n        <p>\n          Hiring a junior backend developer and expecting them to help with all\n          aspect of the project is failure on the management part. You want to\n          build something complex , you need the right person for the job.\n        </p>\n        <br />\n        <h2>No work process and planning</h2>\n        <p>\n          At the beginning , there was an initial planning document but as the\n          project progressed there is none, most of the requirement are verbal\n          ie; <strong>we need this feature do this</strong> lol. Another issue I\n          had raised from the beginning is make tickets containing all the\n          details and requirements for task before assigning.\n        </p>\n\n        <br />\n        <h2>Low salary</h2>\n        <p>\n          Developers tend to leave their job when another company offers\n          reasonable or better salary.\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default IssuesDevTeam;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst CreateUserinSQL = () => {\n  let tags = [\"Database\", \"Postgres\", \"SQL server\", \"Mysql\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        Creating user in Postgres, SQL Server and Mysql\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-12-01\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <Typography variant=\"body2\" component=\"div\" gutterBottom>\n          <p>\n            I've had the opportunities to work with some popular Relational\n            Databases and in this artiles I would like to share how to create\n            users for each. The codes are short and straight to the point and I\n            wont be going into details. The only requirements are to have\n            database and a database client installed, in my case I use Dbeaver\n            as it supports all database I am going to cover.\n          </p>\n\n          <h3>Postgres </h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            sudo -u postgres psql\n            <br />\n            postgres=# create database mydb;\n            <br />\n            postgres=# create user myuser with encrypted password 'mypass';\n            <br />\n            postgres=# grant all privileges on database mydb to myuser;\n            <br />\n          </pre>\n\n          <h3>MySQL </h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            mysql -u root -p\n            <br />\n            CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';\n            <br />\n            GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost';\n            <br />\n            FLUSH PRIVILEGES;\n            <br />\n          </pre>\n\n          <h3>SQL Server (2019)</h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- Create a login and user\n            <br />\n            BEGIN TRAN;\n            <br />\n            BEGIN TRY\n            <br />\n            &emsp; &emsp;CREATE LOGIN DemoLogin WITH PASSWORD ='secret123#';\n            <br />\n            &emsp;&emsp; CREATE USER Demouser FOR LOGIN DemoLogin;\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_ddladmin','Demouser';\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_datareader','Demouser';\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_datawriter','Demouser';\n            <br />\n            &emsp; &emsp;COMMIT TRAN;\n            <br />\n            END TRY <br />\n            BEGIN CATCH <br />\n            &emsp;&emsp; ROLLBACK TRAN ;\n            <br />\n            &emsp;&emsp; select ERROR_MESSAGE(); <br />\n            END CATCH\n          </pre>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- List all users\n            <br />\n            <br />\n            Revert execute as user='admin';\n            <br />\n            Select name as username, create_date, modify_date,&nbsp;\n            <br />\n            type_desc as type, authentication_type_desc as\n            authentication_type&nbsp;\n            <br />\n            from sys.database_principals&nbsp;\n            <br />\n            where type not in ('A', 'G', 'R', 'X') and&nbsp;\n            <br />\n            sid is not null and name != 'guest' order by username;&nbsp;\n            <br />\n          </pre>\n\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- List all logins\n            <br />\n            <br />\n            Select sp.name as login, sp.type_desc as login_type,&nbsp;\n            <br />\n            sl.password_hash, sp.create_date, sp.modify_date,&nbsp;\n            <br />\n            case&nbsp;\n            <br />\n            &nbsp;&nbsp;when&nbsp;sp.is_disabled = 1 then 'Disabled'&nbsp;\n            <br />\n            else 'Enabled' end as status&nbsp;\n            <br />\n            from sys.server_principals sp&nbsp;\n            <br />\n            left join sys.sql_logins sl on sp.principal_id =\n            sl.principal_id&nbsp;\n            <br />\n            where sp.type not in ('G', 'R') order by sp.name;&nbsp;\n            <br />\n          </pre>\n        </Typography>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default CreateUserinSQL;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/SecureConnectionDB1.a5785802.jpg\";","export default __webpack_public_path__ + \"static/media/SecureConnectionDB2.5168a6ea.png\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SecureConnectionDB1 from \"./images/SecureConnectionDB1.jpg\";\nimport SecureConnectionDB2 from \"./images/SecureConnectionDB2.png\";\n\nconst SecureConnectionDB = () => {\n  let tags = [\"Database\", \"Postgres\", \"Dbeaver\"];\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        Securely Connecting to remote Postgresql database\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(\"2021-05-09\").toDateString()}\n        {tags.length > 0\n          ? tags.map((item, key) => (\n              <Chip\n                key={key}\n                size=\"small\"\n                label={item}\n                color=\"secondary\"\n                className={classes.pills}\n              />\n            ))\n          : null}\n      </Typography>\n\n      <Typography variant=\"caption\" display=\"block\">\n        <Chip\n          size=\"small\"\n          label={`Edited : ${new Date(\"2021-11-11\").toDateString()}`}\n          color=\"secondary\"\n          className={classes.pills}\n        />\n      </Typography>\n\n      {/*content*/}\n      <article>\n        <p>\n          In my path to explore more on Server domain, I had purchased a small\n          VPS server with ubuntu distro. I learned setting up web servers, email\n          servers, SSL certificates, cronjobs and also databases , mostly RDBMS.\n        </p>\n\n        <p>\n          During that time I was more fond of PostgresSQL so I set it up on\n          server and could connect to it from CLI. Later I built an application\n          on using Postgres and tried connecting to it remotely , I failed. I\n          was confused and lost on how to connect to remote DB, after spending\n          hours on google and stackoverflow I found a way by editing the\n          postgres's configurations file. However this method allowed all IPs to\n          make connection to database, one could brute fore his way making the\n          database laggy or even compromised.\n        </p>\n\n        <p>\n          Later I found there is a safer way, SSH Tunneling. You save your\n          public SSH key to the server and from your database client(DBeaver in\n          my case) select SSH tab then set host (serverip), username (server\n          user/root), in Authentication method select Public key and in private\n          key(your path to private ssh key). Also passphrase if you use one.\n        </p>\n        <img src={SecureConnectionDB1} alt=\"BigCo Inc. logo\" />\n        <p>In Main tab, in sert your remote database credentials as below.</p>\n        <img src={SecureConnectionDB2} alt=\"BigCo Inc. logo\" />\n\n        <p>\n          Finally test the connection, if connected all good if not go figure :p{\" \"}\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default SecureConnectionDB;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import GitMeSomeKnowledge from \"./GitMeSomeKnowledge\";\nimport AwsCliCheatsheet from \"./AwsCliCheatsheet\";\nimport ArticlesWorthReading from \"./ArticlesWorthReading\";\nimport UpdatingNestedJavascript from \"./UpdatingNestedJavascript\";\nimport MigratingToReactTable from \"./MigratingToReactTable\";\nimport IssuesDevTeam from \"./IssuesDevTeam\";\nimport CreateUserinSQL from \"./CreateUserinSQL\";\nimport SecureConnectionDB from \"./SecureConnectionDB\";\n\nexport const Posts = [\n  {\n    title: \"Creating user in Postgres, SQL Server and Mysql\",\n    slug_title: \"creating_user_in_postgres_sqlserver_mysql\",\n    summary: \"Collection of helpful  cli commands for S3 bucket\",\n    tags: \"Database, Postgres, SQL server, Mysql\",\n    status: \"publish\",\n    created_at: \"2021-12-01\",\n    updated_at: \"2021-12-01\",\n    component: CreateUserinSQL,\n  },\n  {\n    title: \"AWS Cli cheatsheet for S3\",\n    slug_title: \"aws_cli_cheatsheet_for_s3\",\n    summary: \"Collection of helpful  cli commands for S3 bucket\",\n    tags: \"aws, s3, aws cli\",\n    status: \"publish\",\n    created_at: \"2021-10-20\",\n    updated_at: \"2021-10-20\",\n    component: AwsCliCheatsheet,\n  },\n  {\n    title: \"Articles worth reading\",\n    slug_title: \"articles_worth_reading\",\n    summary:\n      \"Here is a list of articles that I stumbled upon when going through Hackernews and surfing the web that are worth reading.\",\n    tags: \"Reads, Knowledge\",\n    status: \"publish\",\n    created_at: \"2021-09-02\",\n    updated_at: \"2021-11-11\",\n    component: ArticlesWorthReading,\n  },\n  {\n    title: \"Updating a nested object in Javascript\",\n    slug_title: \"updating_a_nested_object_in_javascript_2\",\n    summary: \"Updating a specific key in Object using spread operator.\",\n    tags: \"Javascript\",\n    status: \"publish\",\n    created_at: \"2021-06-18\",\n    updated_at: \"2021-06-18\",\n    component: UpdatingNestedJavascript,\n  },\n  {\n    title: \"Migrating from Material-table to React-table\",\n    slug_title: \"migrating_from_material_table_to_react_table_2\",\n    summary:\n      \"Material Ui has been my go to UI library for every react projects and I have been using material-table as it plays nice with the former. But considering the dependencies that comes along with it might be worth considering other options.\",\n    tags: \"React, Optimization\",\n    status: \"publish\",\n    created_at: \"2021-05-19\",\n    updated_at: \"2021-06-01\",\n    component: MigratingToReactTable,\n  },\n  {\n    title: \"Securely Connecting to remote Postgresql database\",\n    slug_title: \"securely_connecting_to_remote_postgresql_database\",\n    summary:\n      \"In this article , we discuss on how to remotely connect to Postgres SQl database in secure manner.\",\n    tags: \"Database, Postgres, Dbeaver\",\n    status: \"publish\",\n    created_at: \"2021-05-09\",\n    updated_at: \"2021-06-01\",\n    component: SecureConnectionDB,\n  },\n  {\n    title: \"Issues with building a stable Dev team\",\n    slug_title: \"issues_with_building_a_stable_dev_team\",\n    summary: \"Things I learned when managing a team.\",\n    tags: \"Slice of Life\",\n    status: \"publish\",\n    created_at: \"2021-03-03\",\n    updated_at: \"2021-06-01\",\n    component: IssuesDevTeam,\n  },\n  {\n    title: \"Git me some knowledge\",\n    slug_title: \"git_me_some_knowledge_2\",\n    summary: \"A post on funny issue I encountered with git.\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2021-02-21\",\n    updated_at: \"2021-06-01\",\n    component: GitMeSomeKnowledge,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport { routes } from \"./posts/PostIndex\";\n\nconst ListArticles = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  const showTags = (tags) => {\n    if (!tags || tags === null) {\n      return null;\n    }\n\n    return tags\n      .split(\",\")\n      .map((item, key) => (\n        <Chip\n          key={key}\n          className={`${classes.chipStyle} ml-1`}\n          label={item.trim()}\n          size=\"small\"\n        />\n      ));\n  };\n\n  if (loading) {\n    return (\n      <center>\n        <CircularProgress className=\"mt-5\" />\n      </center>\n    );\n  }\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n            <span className=\"ml-3\">{showTags(item.tags)}</span>\n          </div>\n\n          <Link to={`/articles/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n\n          <Typography variant=\"body2\" gutterBottom>\n            {item.summary}\n          </Typography>\n\n          <Link to={`/articles/${item.slug_title}`} className={classes.links}>\n            <Typography gutterBottom color=\"primary\">\n              Read this article\n              <ArrowRightAltIcon\n                variant=\"overline\"\n                style={{ marginBottom: \"-10px\", marginLeft: \"10px\" }}\n              />\n            </Typography>\n          </Link>\n        </div>\n      ))}\n\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListArticles;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"3rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/PostIndex\";\n\nconst ShowArticle = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <Switch>\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/articles/${item.slug_title}`}\n          component={item.component}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/articles\" />\n    </Switch>\n  );\n};\n\nexport default ShowArticle;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListArticles from \"./ListArticles\";\nimport ShowArticle from \"./ShowArticle\";\n\nconst Article = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/articles\" component={ListArticles} />\n      <Route exact path=\"/articles/:slug\" component={ShowArticle} />\n    </Switch>\n  );\n};\n\nexport default Article;\n","import NamecheapApi from \"./NamecheapApi\";\nimport NepseApi from \"./NepseApi\";\n\nexport const Posts = [\n  {\n    title: \"My Year in 2018\",\n    slug_title: \"my_year_in_2018\",\n    summary: \"Collection of helpful  cli commands for S3 bucket\",\n    tags: \"aws, s3, aws cli\",\n    status: \"publish\",\n    created_at: \"2021-10-20\",\n    updated_at: \"2021-10-20\",\n    component: NepseApi,\n  },\n\n  {\n    title: \"Git me some knowledge\",\n    slug_title: \"git_me_some_knowledge_2\",\n    summary: \"A post on funny issue I encountered with git.\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2021-02-21\",\n    updated_at: \"2021-06-01\",\n    component: NamecheapApi,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","import React from \"react\";\n\nconst NepseApi = () => {\n  return <div>nepse</div>;\n};\n\nexport default NepseApi;\n","import React from \"react\";\n\nconst NamecheapApi = () => {\n  return <div>Namecheap</div>;\n};\n\nexport default NamecheapApi;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { routes } from \"./posts/JournalIndex.js\";\n\nconst ListJournal = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <Link to={`/journal/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n          </div>\n        </div>\n      ))}\n\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListJournal;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"1rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/JournalIndex.js\";\n\nconst ShowJournal = () => {\n  return (\n    <Switch>\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/journal/${item.slug_title}`}\n          component={item.component}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/projects\" />\n    </Switch>\n  );\n};\n\nexport default ShowJournal;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListJournal from \"./ListJournal\";\nimport ShowJournal from \"./ShowJournal\";\n\nconst Journal = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/journal\" component={ListJournal} />\n      <Route exact path=\"/journal/:slug\" component={ShowJournal} />\n    </Switch>\n  );\n};\n\nexport default Journal;\n","export default __webpack_public_path__ + \"static/media/eisei.f9f432c7.jpeg\";","import React from \"react\";\nimport eisei from \"./images/eisei.jpeg\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Eisei = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Eisei : A space adventure game\n      </Typography>\n      <div>\n        <p>\n          The word Eisei means satellite in Japanese, I found this word when\n          searching for cool names relating to astrology for naming the game I\n          was developing. Eisei is a space shooter adventure game build on top\n          of{\" \"}\n          <a\n            href=\"https://www.yoyogames.com/en/gamemaker\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Game Maker studio\n          </a>{\" \"}\n          . I build this game in 3rd year of my bachelors, the main goal was to\n          get myself get better idea on programming and have fun while doing so.\n          It helped me get better idea of OOP and get out of my comfort zone and\n          deep dive into game engine documents.\n        </p>\n\n        <p>The game is available for two platforms:</p>\n        <ul>\n          <li>\n            Windows :{\" \"}\n            <a\n              href=\"https://drive.google.com/file/d/0B1UfqKYnpobyZi1GNzdCNHFCQ0E/view?usp=sharing\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Download Link\n            </a>\n          </li>\n          <li>\n            Android :{\" \"}\n            <a\n              href=\"https://drive.google.com/file/d/0B1UfqKYnpobyaEdYRkJWSzN1WTg/view?usp=sharing\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Download Link\n            </a>\n          </li>\n        </ul>\n        <p>\n          <img src={eisei} alt=\"eisei.jpeg\" />\n          <br />\n        </p>\n      </div>\n    </article>\n  );\n};\n\nexport default Eisei;\n","export default __webpack_public_path__ + \"static/media/nepse.0f113710.png\";","import React from \"react\";\nimport nepse from \"./images/nepse.png\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NepseApi = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        NEPSE-Api\n      </Typography>\n      <p>\n        There is no free NEPSE api resourse provider so I decided to make one\n        for my own. This project provides api for 3 things:\n      </p>\n      <ol>\n        <li>Todays Share</li>\n        <li>Top Gainers</li>\n        <li>Top Loosers</li>\n      </ol>\n      <p>\n        <br />\n      </p>\n      <p>\n        <img src={nepse} alt=\"nepse api page\" />\n      </p>\n      <p>\n        Here is the Github link:{\" \"}\n        <a\n          href=\"https://bishaludash.github.io/NEPSE-Api/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          NEPSE-Api\n        </a>\n      </p>\n    </article>\n  );\n};\n\nexport default NepseApi;\n","export default __webpack_public_path__ + \"static/media/namecheap1.0680dbc9.png\";","export default __webpack_public_path__ + \"static/media/namecheap2.283cf029.png\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport namecheap1 from \"./images/namecheap1.png\";\nimport namecheap2 from \"./images/namecheap2.png\";\n\nconst NamecheapApi = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Namecheap Api\n      </Typography>\n\n      <p>\n        When I was working for Mobwizards, we had to migrate to a new VPS server\n        with higher specs and it was a tedious job to update the DNS host\n        records for each domain (130 plus at the time). Dept head suggested we\n        use the namecheap api to update add domains at once, so i began my\n        research and started working on the script. My finished script would\n        read domains from a file which was stored in array and update DNS\n        records for each.\n      </p>\n\n      <p>\n        Later as our project grew, I integrated bunch of namecheap api into our\n        application as requested by the marketing team which helped improve\n        efficiency. The{\" \"}\n        <a\n          href=\"https://www.namecheap.com/support/api/methods/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          api\n        </a>{\" \"}\n        are as below :\n      </p>\n      <ul>\n        <li>Domains : getList, create, check, renew, getInfo</li>\n        <li>Domains.dns : getList, getHosts ,setHosts</li>\n        <li>Users: getPricing, update</li>\n      </ul>\n\n      <p>\n        <img src={namecheap1} alt=\"nepse api page\" />\n      </p>\n\n      <p>\n        <img src={namecheap2} alt=\"nepse api page\" />\n      </p>\n    </article>\n  );\n};\n\nexport default NamecheapApi;\n","export default __webpack_public_path__ + \"static/media/docker.38a7e458.jpeg\";","import Eisei from \"./Eisei\";\nimport NepseApi from \"./NepseApi\";\nimport NamecheapApi from \"./NamecheapApi\";\nimport DockerImage from \"./DockerImage\";\n\nexport const Posts = [\n  {\n    title: \"NEPSE-Api\",\n    slug_title: \"nepse-api\",\n    tags: \"aws, s3, aws cli\",\n    status: \"publish\",\n    created_at: \"2020-10-20\",\n    updated_at: \"2020-10-20\",\n    component: NepseApi,\n  },\n\n  {\n    title: \"Eisei : A space adventure game\",\n    slug_title: \"eisei\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2020-02-21\",\n    updated_at: \"2020-06-01\",\n    component: Eisei,\n  },\n  {\n    title: \"Namecheap Api\",\n    slug_title: \"namecheap_api\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2021-02-21\",\n    updated_at: \"2021-06-01\",\n    component: NamecheapApi,\n  },\n  {\n    title: \"Docker Image to run legacy codebase\",\n    slug_title: \"Docker_image_to_run_legacy_codebase\",\n    tags: \"Docker\",\n    status: \"publish\",\n    created_at: \"2020-12-21\",\n    updated_at: \"2020-12-21\",\n    component: DockerImage,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","import React from \"react\";\nimport dockerImage from \"./images/docker.jpeg\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst DockerImage = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Docker Image to run legacy codebase.\n      </Typography>\n      <div>\n        <p>\n          The legacy codebase was a mix of core php and yii framework, Mysql as\n          database and apache as web server. Whenever using newer version of\n          php, the codebase used to show deprecated warnings and some\n          functionality stoped working. Also it was a tedious job to setup the\n          projects.\n        </p>\n\n        <p>\n          To overcome such problems, I created docker images to run the project\n          and make it easier to the dev team to focus on features. I created two\n          images.\n          <ul>\n            <li>\n              First image for consisting the required php version, apache web\n              server\n            </li>\n            <li> second image consisting the Mysql database.</li>\n          </ul>\n          The container run from these images would communicate with each other\n          using docker network and to retain database data a volume was made.\n        </p>\n\n        <p>\n          <img src={dockerImage} alt=\"dockerImage.jpeg\" />\n          <br />\n        </p>\n      </div>\n    </article>\n  );\n};\n\nexport default DockerImage;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { routes } from \"./posts/ProjectIndex.js\";\n\nconst ListProject = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <Link to={`/projects/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n          </div>\n        </div>\n      ))}\n\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListProject;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"1rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/ProjectIndex.js\";\n\nconst ShowProject = () => {\n  return (\n    <Switch>\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/projects/${item.slug_title}`}\n          component={item.component}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/projects\" />\n    </Switch>\n  );\n};\n\nexport default ShowProject;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListProject from \"./ListProject\";\nimport ShowProject from \"./ShowProject\";\n\nconst Project = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/projects\" component={ListProject} />\n      <Route exact path=\"/projects/:slug\" component={ShowProject} />\n    </Switch>\n  );\n};\n\nexport default Project;\n","import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  stack: {\n    paddingLeft: \"40px\",\n  },\n  stackList: {\n    textDecoration: \"underline\",\n  },\n  staclListDetails: {\n    margin: \"5px 0\",\n    marginBottom: \"2rem\",\n  },\n  links: {\n    color: \"#e57373\",\n  },\n});\n\nconst Stack = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <h2>Stack</h2>\n      <p>\n        I've put together this \"Stack\" page that covers every part of my setup.\n      </p>\n\n      <h4>Development</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>VS Code</li>\n        <p className={classes.staclListDetails}>\n          Most productive text editing environment I've ever used. Love the\n          integrated terminal and feature rich extensions. Only complain I have\n          is it consumes more mremory.\n        </p>\n\n        <li className={classes.stackList}>Sublime Text</li>\n        <div className={classes.staclListDetails}>\n          Light and fast, just perfect for low end device. Packages such as\n          terminus can make up for the missing integrated terminal.\n          <p>\n            <a\n              href=\"https://github.com/bishaludas/SublimeForReactLaravel\"\n              target=\"_blank\"\n              className={classes.links}\n              rel=\"noreferrer\"\n            >\n              My Sublime Setup\n            </a>\n          </p>\n        </div>\n\n        <li className={classes.stackList}>Jupiter Notebook</li>\n        <p className={classes.staclListDetails}>\n          Always end up using Jupyter Notebook whenever I have to debug some\n          confusing Pandas algorithm. Using PDB debugger in terminal sometimes\n          gets annoying as you can't see the datasets clearly, Jupyter to the\n          rescue. Also very helpful for testing simple logics quickly.\n        </p>\n\n        <li className={classes.stackList}>Browser</li>\n        <p className={classes.staclListDetails}>\n          Brave is lightweight browser based upon chromium that comes\n          preinstalled with ad-block tool. I prefer using this over chrome as\n          its lighter and faster.\n        </p>\n      </ul>\n\n      <h4>Frontend</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>React.js</li>\n        <p className={classes.staclListDetails}>\n          Been using React since early 2020 and I love it. Its lightweight, fast\n          and has rich third party packages. Comming form Laravels's blade\n          template , JSX was confusing at beginning but getting better at this\n          every day.\n        </p>\n\n        <li className={classes.stackList}>CSS Framework</li>\n        <ul className={classes.stack}>\n          <li>Material UI</li>\n          <p className={classes.staclListDetails}>\n            Material UI is my go to css framework whenever working with React\n            based projects. It has excellent components for faster and easier\n            web development.\n          </p>\n\n          <li>Bootstrap</li>\n          <p className={classes.staclListDetails}>\n            Bootstrap was the first css framework i picked up and used for all\n            my projects before switching to react and Material ui. All of\n            laravel projects use bootstrap for frontend.\n          </p>\n        </ul>\n      </ul>\n\n      <h4>Backend</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>Web/Api Development</li>\n        <p className={classes.staclListDetails}>\n          I use ubuntu 18.4 as my local environment and also use docker for some\n          projects. All of my web/api projects use laravel as backend. This is\n          what i've been using for years and am pretty confident in. However, I\n          use flask whenever i do any data analytics projects as this kind of\n          projects dont require all the magical features provided by laravel out\n          of the box. For data analytics projects I mostly use python's popular\n          package Pandas.\n        </p>\n\n        <p className={classes.staclListDetails}>\n          For server Apache or Nginx any would work, both are easy to work with\n          and have lots of article on howtos. Currently this projects uses Nginx\n          and SSl certificate by Let's Encrypt.\n        </p>\n\n        <li className={classes.stackList}>Database</li>\n        <p className={classes.staclListDetails}>\n          Been using relational database since day one ie MySQL and postgres. I\n          am pretty good with the sql queries, triggers, CTE, stored procedures.\n          I am thinking of learning NoSql and using it over some of my light\n          weight projects.\n        </p>\n      </ul>\n\n      <h4>Hosting</h4>\n      <ul>\n        <li className={classes.stackList}>NestNepal</li>\n        <div className={classes.staclListDetails}>\n          NestNepals provides pretty good specs VPS as mind bogging price rate.\n          Currently using their server to host all my projects.\n          <p>\n            <a\n              href=\"http://myaccount.nestnepal.com/aff.php?aff=7\"\n              target=\"_blank\"\n              className={classes.links}\n              rel=\"noreferrer\"\n            >\n              Go check them out!\n            </a>\n          </p>\n        </div>\n        <li className={classes.stackList}>Mail Solution</li>\n        <p className={classes.staclListDetails}>\n          I use Zoho for email because it provide a free business plan along\n          with TLS standart encryption.\n        </p>\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Stack;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Navbar from \"./components/Navigation/Navbar\";\nimport About from \"./components/About/About\";\nimport Resume from \"./components/Resume/Resume\";\nimport Articles from \"./components/Articles/Articles\";\nimport Journal from \"./components/Journal/Journal\";\nimport Project from \"./components/projects/Project\";\nimport Stack from \"./components/About/Stack\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(true);\n  const darkTheme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      primary: {\n        main: darkMode ? \"#fff\" : \"#000\",\n      },\n      secondary: {\n        main: \"#e57373\",\n      },\n      background: {\n        default: darkMode ? \"#202020\" : \"#fff\",\n      },\n    },\n    typography: {\n      fontFamily: \"ubuntu\",\n      fontSize: 18,\n    },\n  });\n\n  /*function to change the theme*/\n  const changeTheme = () => {\n    console.log(darkMode);\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      {/* <Router basename=\"/gh-budash\"> */}\n      <Router basename=\"\">\n        <div className={classes.container}>\n          <Navbar changeTheme={changeTheme} darkMode={darkMode} />\n          <div className=\"mt-5\">\n            <Switch>\n              <Route exact path=\"/\" component={About} />\n              <Route path=\"/resume\" component={Resume} />\n              <Route path=\"/articles\" component={Articles} />\n              <Route path=\"/journal\" component={Journal} />\n              <Route path=\"/projects\" component={Project} />\n              <Route path=\"/stack\" component={Stack} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: \"0 auto\",\n    width: \"70%\",\n    padding: \"5%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    fontSize: \"18px\",\n    fontFamily: \"Ubuntu\",\n  },\n  contentBody: {\n    marginTop: \"2.5rem\",\n  },\n}));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}