{"version":3,"sources":["assets/budash.jpg","components/Navigation/Navbar.js","components/About/About.js","components/Resume/Resume.js","components/Articles/posts/images/GitMeSomeKnowledge1.png","components/Articles/posts/GitMeSomeKnowledge.js","components/Articles/posts/AwsCliCheatsheet.js","components/Articles/posts/ArticlesWorthReading.js","components/Articles/posts/UpdatingNestedJavascript.js","components/Articles/posts/images/migratingtoreactTable1.png","components/Articles/posts/images/migratingtoreactTable2.png","components/Articles/posts/images/migratingtoreactTable3.jpeg","components/Articles/posts/MigratingToReactTable.js","components/Articles/posts/IssuesDevTeam.js","components/Articles/posts/CreateUserinSQL.js","components/Articles/posts/images/SecureConnectionDB1.jpg","components/Articles/posts/images/SecureConnectionDB2.png","components/Articles/posts/SecureConnectionDB.js","components/Articles/posts/images/lambda.jpg","components/Articles/posts/Serverless.js","components/Articles/posts/images/vps1.png","components/Articles/posts/images/vps2.png","components/Articles/posts/NoVpsAnymore.js","components/Articles/posts/images/reserved_instance.PNG","components/Articles/posts/images/cost_explorer.PNG","components/Articles/posts/ReducingRDSPricing.js","components/Articles/posts/PostIndex.js","components/Articles/ListArticles.js","components/Articles/ShowArticle.js","components/Articles/Articles.js","components/Journal/posts/images/FiveYearsAsSWE/college.jpeg","components/Journal/posts/images/FiveYearsAsSWE/college_dab.jpeg","components/Journal/posts/images/FiveYearsAsSWE/mustang.jpeg","components/Journal/posts/images/FiveYearsAsSWE/labim_college.jpeg","components/Journal/posts/images/FiveYearsAsSWE/cycling.jpeg","components/Journal/posts/images/FiveYearsAsSWE/CG.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pokhara.jpeg","components/Journal/posts/images/FiveYearsAsSWE/sarankot.jpeg","components/Journal/posts/images/FiveYearsAsSWE/abc.jpeg","components/Journal/posts/images/FiveYearsAsSWE/abc_two.jpeg","components/Journal/posts/images/FiveYearsAsSWE/graduation.jpeg","components/Journal/posts/images/FiveYearsAsSWE/hike.jpeg","components/Journal/posts/images/FiveYearsAsSWE/office_outing.jpeg","components/Journal/posts/images/FiveYearsAsSWE/office_outing2.jpeg","components/Journal/posts/images/FiveYearsAsSWE/poker.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pokhara_2.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pokhara_3.jpeg","components/Journal/posts/images/FiveYearsAsSWE/sujan.jpeg","components/Journal/posts/images/FiveYearsAsSWE/covid_2.jpeg","components/Journal/posts/images/FiveYearsAsSWE/sherpa.jpeg","components/Journal/posts/images/FiveYearsAsSWE/sherpa_farewell.jpeg","components/Journal/posts/images/FiveYearsAsSWE/beer_pong.jpeg","components/Journal/posts/images/FiveYearsAsSWE/dhulikhel.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pottery.jpeg","components/Journal/posts/images/FiveYearsAsSWE/sister_wedding.jpeg","components/Journal/posts/images/FiveYearsAsSWE/butwal_flight.jpeg","components/Journal/posts/images/FiveYearsAsSWE/langtang.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pizza.jpeg","components/Journal/posts/images/FiveYearsAsSWE/pushups.jpeg","components/Journal/posts/images/FiveYearsAsSWE/wolf_fish.jpeg","components/Journal/posts/images/FiveYearsAsSWE/wolf_outing.jpeg","components/Journal/posts/images/FiveYearsAsSWE/yomari.jpeg","components/Journal/posts/images/FiveYearsAsSWE/wolf_holi.jpeg","components/Journal/posts/images/FiveYearsAsSWE/kic_meet.png","components/Journal/posts/JournalIndex.js","components/Journal/posts/FiveYearsAsSWE.js","components/Journal/ListJournal.js","components/Journal/ShowJournal.js","components/Journal/Journal.js","components/projects/posts/images/eisei.jpeg","components/projects/posts/Eisei.js","components/projects/posts/images/nepse.png","components/projects/posts/NepseApi.js","components/projects/posts/images/namecheap1.png","components/projects/posts/images/namecheap2.png","components/projects/posts/NamecheapApi.js","components/projects/posts/images/docker.jpeg","components/projects/posts/DockerImage.js","components/projects/posts/images/vline_atchitecture_v2.png","components/projects/posts/ProjectIndex.js","components/projects/posts/MyFirstCloudArchitecture.js","components/projects/ListProject.js","components/projects/ShowProject.js","components/projects/Project.js","components/About/Stack.js","App.js","index.js"],"names":["Navbar","changeTheme","darkMode","classes","useStyles","history","useHistory","Grid","container","spacing","item","sm","md","lg","to","Avatar","className","large","alt","src","Budash","xs","Typography","variant","component","gutterBottom","author","onClick","console","log","push","style","cursor","marginLeft","navLinkContainer","navlinks","activeClassName","active","makeStyles","width","height","margin","marginRight","textDecoration","fontWeight","color","fontSize","theme","content","wordSpacing","marginBottom","breakpoints","down","links","About","href","target","rel","Resume","GitMeSomeKnowledge","props","display","Date","createdAt","toDateString","tags","split","length","map","key","Chip","size","label","pills","updatedAt","spellCheck","GitMeSomeKnowledge1","AwsCliCheatsheet","ArticlesWorthReading","UpdatingNestedJavascript","JSON","stringify","11","name","class","age","12","MigratingToReactTable","MigratingtoreactTable1","MigratingtoreactTable2","migratingtoreactTable3","IssuesDevTeam","CreateUserinSQL","SecureConnectionDB","SecureConnectionDB1","SecureConnectionDB2","Serverless","lambda","NoVpsAnymore","vps1","vps2","ReduceRDSPricing","reserved_instance","cost_explorer","routes","title","slug_title","summary","status","created_at","updated_at","ReducingRDSPricing","sort","a","b","ListArticles","useState","loading","setLoading","useEffect","CircularProgress","article","articleDate","chipStyle","trim","ShowArticle","window","scrollTo","exact","path","render","Article","Alert","severity","icon","AlertTitle","college","college_dab","mustang","cycling","pokhara","sarankot","labim_college","CG","abc_two","graduation","abc","hike","pokhara_3","office_outing","office_outing2","poker","sujan","pokhara_2","covid_2","sherpa","sherpa_farewell","dhulikhel","pottery","butwal_flight","sister_wedding","beer_pong","yomari","wolf_outing","pushups","langtang","wolf_holi","kic_meet","wolf_fish","pizza","ListJournal","ShowJournal","Journal","Eisei","eisei","NepseApi","nepse","NamecheapApi","namecheap1","namecheap2","DockerImage","dockerImage","CloudArchitecture","ListProject","ShowProject","Project","stack","paddingLeft","stackList","staclListDetails","Stack","App","setDarkMode","darkTheme","createTheme","palette","type","primary","main","secondary","background","default","typography","fontFamily","ThemeProvider","CssBaseline","basename","Articles","padding","contentBody","marginTop","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1837224.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/budash.f2e6a11e.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Budash from \"../../assets/budash.jpg\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Navbar = ({ changeTheme, darkMode }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const redirectHome = () => {\n    console.log(\"go home\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {/*Avatar grid*/}\n        <Grid item sm={6} md={3} lg={2}>\n          <Link to=\"/\">\n            <Avatar className={classes.large} alt=\"Remy Sharp\" src={Budash} />\n          </Link>\n        </Grid>\n\n        {/*Navlink container*/}\n        <Grid item sm={12} md={9} lg={10}>\n          <Grid item xs={10} sm={10}>\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n              <span className={classes.author} onClick={redirectHome}>\n                Bishal Udash\n              </span>\n              <span style={{ cursor: \"pointer\", marginLeft: \"20px\" }}>\n                {darkMode ? (\n                  <Brightness7Icon onClick={changeTheme} />\n                ) : (\n                  <Brightness4Icon onClick={changeTheme} />\n                )}\n              </span>\n            </Typography>\n          </Grid>\n\n          <Grid item xs={10} sm={10} className={classes.navLinkContainer}>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/articles\"\n              activeClassName={classes.active}\n            >\n              Articles\n            </NavLink>\n            <NavLink\n              className={classes.navlinks}\n              to=\"/projects\"\n              activeClassName={classes.active}\n            >\n              Projects\n            </NavLink>\n            {/* <NavLink\n              className={classes.navlinks}\n              to=\"/stack\"\n              activeClassName={classes.active}\n            >\n              Stack\n            </NavLink> */}\n            <NavLink\n              className={classes.navlinks}\n              to=\"/journal\"\n              activeClassName={classes.active}\n            >\n              Journal\n            </NavLink>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Navbar;\n\nconst useStyles = makeStyles({\n  large: {\n    width: \"120px\",\n    height: \"120px\",\n  },\n  navLinkContainer: {\n    margin: \"1rem 0\",\n  },\n  navlinks: {\n    marginRight: \"20px\",\n    textDecoration: \"none\",\n    fontWeight: \"500\",\n    color: \"#676767\",\n    \"&:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  active: {\n    color: \"#e57373\",\n  },\n  author: {\n    fontSize: \"xx-large\",\n    fontWeight: \"600\",\n    \"&:hover\": {\n      color: \"#e57373\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    wordSpacing: \"2px\",\n    \"& p\": {\n      marginBottom: \"5%\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginBottom: \"10%\",\n      },\n    },\n  },\n  links: {\n    color: \"inherit\",\n    \"&:hover\": {\n      color: \"#e57373\",\n    },\n  },\n}));\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.content}>\n      <p>\n        Hi, I'm Bishal! I'm a full-stack engineer with a passion for building\n        beautiful things from scratch. I've been building websites and saas\n        services since 2017. I love working with React, Express and Postgress,\n        more about them in{\" \"}\n        {\n          <Link to=\"/stack\" className={classes.links}>\n            Stack\n          </Link>\n        }{\" \"}\n        section.\n      </p>\n\n      <p>\n        Right now I'm working at{\" \"}\n        <a\n          href=\"https://wolfmatrix.com/\"\n          target=\"_blank\"\n          className={classes.links}\n          rel=\"noreferrer\"\n        >\n          Wolfmatrix\n        </a>\n        , as a Sr. Software Engineer where I work on solving challenging\n        problems, build cloud architecture and mentor associate developers.\n      </p>\n\n      <p>\n        I have worked on projects for companies such as Chaudhary Group,\n        Mobwizards, Cloudchomp, Vline ,Metro Trains and others. I occasionally\n        make myself available for contract work and consultancy. Please dont\n        hesitate to contact me.\n      </p>\n      <p>\n        You can reach me at{\" \"}\n        <a href=\"mailto: me@bishaludash.com.np\" className={classes.links}>\n          me@bishaludash.com.np\n        </a>{\" \"}\n      </p>\n\n      <a\n        href=\"https://www.linkedin.com/in/bishal-udash-04a07215a/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={`${classes.links} mr-2`}\n      >\n        <LinkedInIcon />\n      </a>\n      <a\n        href=\"https://github.com/bishaludash\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={classes.links}\n      >\n        <GitHubIcon />\n      </a>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Resume = () => {\n  return <div>Resume</div>;\n};\n\nexport default Resume;\n","export default __webpack_public_path__ + \"static/media/GitMeSomeKnowledge1.7ffb8982.png\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GitMeSomeKnowledge1 from \"./images/GitMeSomeKnowledge1.png\";\n\nconst GitMeSomeKnowledge = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Git me some knowledge\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          Due to covid-19, I had been working from home (wfh) for almost a year\n          and using my personal laptop for office works. At the beginning of wfh\n          , I remembering setting up my office email for setting up git config\n          globally.\n        </p>\n\n        <pre className=\"ql-syntax\" spellCheck=\"false\">\n          git config --global user.name \"Your global username\" <br />\n          git config --global user.email \"office email\"\n        </pre>\n        <p>\n          <br />\n        </p>\n        <p>\n          Things were working okay, and after some months I began working on\n          some side projects, made some commits and pushed it to GitHub. Then i\n          went to check into GitHub on repo status and noticed that my timeline\n          was not reflecting any commits.\n        </p>\n        <p>\n          <img src={GitMeSomeKnowledge1} alt=\"Github\" />\n        </p>\n        <p></p>\n        <p>\n          <br />\n        </p>\n        <p>\n          From November to early January, the commits timeline was empty. I\n          searched some posts over stack overflow &amp; google and found out the\n          cause for this was my git's globally configured email was different\n          than that of GitHub.\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          Found out Git offers other ways on how you can set you username and\n          email.\n        </p>\n        <ol>\n          <li>\n            project - The data is stored directly in the corresponding\n            project(repository) under .git/config.\n          </li>\n          <li>\n            global - for all repositories of the current user. The config file\n            can be found in your home directory ~/gitconfig.\n          </li>\n          <li>\n            system - This is a system wide configuration and is available for\n            all users and all repositories. You will find it in /etc/gitconfig.\n          </li>\n        </ol>\n        <p>\n          <br />\n        </p>\n        <p>\n          In my case, I set my GitHub's email as global config value and used\n          work email for work specific configuration.Set the username/email for\n          a specific repository\n        </p>\n        <pre className=\"ql-syntax\" spellCheck=\"false\">\n          # change directory to project directory and run command below <br />\n          cd &lt;project/directory&gt; <br />\n          git config user.name \"Your project specific name\" <br />\n          git config user.email \"your@project-specific-email.com\"\n        </pre>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default GitMeSomeKnowledge;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst AwsCliCheatsheet = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        AWS Cli cheatsheet for S3\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <Typography variant=\"body2\" component=\"div\" gutterBottom>\n          <p>\n            S3 buckets can be accessed via aws web console and aws cli. If\n            developers are experienced with the aws cli tools, they can easily\n            perform wide range of actions ie. make &amp; remove bucket, download\n            &amp; upload files , list all buckets, files and more never leaving\n            the terminal. Below is list of useful cli commands for S3.\n          </p>\n\n          <p>List Buckets</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 ls\n          </pre>\n\n          <p>List files in a Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 ls s3://bucket-name\n          </pre>\n\n          <p>Create Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 mb s3://bucket-name make_bucket: bucket-name\n          </pre>\n\n          <p>Delete Bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 rb s3://bucket-name --force\n          </pre>\n\n          <p>Download S3 object to local</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 cp s3://bucket-name/file.txt ~/Desktop/file.txt download:\n            ./backup.tar from s3://bucket-name/file.txt to Dextop/file.txt\n          </pre>\n\n          <p>Upload local file as S3 object</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 cp backup.tar s3://bucket-name upload: ./backup.tar to\n            s3://bucket-name/backup.tar\n          </pre>\n\n          <p>Delete S3 object</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 rm s3://bucket-name/secret-file.gz . delete:\n            s3://bucket-name/secret-file.gz\n          </pre>\n\n          <p>Download bucket to local</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 sync s3://bucket-name/ /media/pasport-ultra/backup\n          </pre>\n\n          <p>Upload local directory to bucket</p>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            aws s3 sync (directory) s3://bucket-name/\n          </pre>\n        </Typography>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default AwsCliCheatsheet;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst ArticlesWorthReading = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Articles worth reading\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          Here is a list of articles that I stumbled upon when going through{\" \"}\n          <a\n            href=\"https://news.ycombinator.com/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Hackernews\n          </a>{\" \"}\n          and surfing the web that are worth reading. I found these articles to\n          be resourceful and learned from them so I will keep adding new once to\n          the list.\n        </p>\n        <ol>\n          <li>\n            <a\n              href=\"https://www.fredrikholmqvist.com/posts/why-erlang/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Why Erlang?\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hpbn.co/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              High Performance Browser Networking\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hakibenita.com/sql-for-data-analysis\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Practical SQL for Data Analysis\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://antonfisher.com/posts/2018/03/19/reducing-docker-image-size-of-a-node-js-application/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Reducing Docker image size of a Node.js application\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://web.eecs.utk.edu/~azh/blog/featurestheywanted.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              When users never use the features they asked for\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://ic.unicamp.br/~stolfi/bitcoin/2020-12-31-bitcoin-ponzi.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Bitcoin is a Ponzi\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.oreilly.com/library/view/oracle-distributed-systems/1565924320/ch01s04.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Multiple Schema Versus Multiple Databases\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://hakibenita.com/postgresql-unknown-features#get-the-number-of-updated-and-inserted-rows-in-an-upsert\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Lesser Known PostgreSQL Features\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://twitter.com/svpino/status/1541753295529660417\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              10 lessons I learned from a brilliant software engineer.\n            </a>\n          </li>\n        </ol>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default ArticlesWorthReading;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst UpdatingNestedJavascript = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Updating a nested object in Javascript\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          I was required to update a key's value in single object withing a huge\n          object containing multiple objects. Using&nbsp;for loop&nbsp;was the\n          first option but it didn't seem efficient as we need to loo through\n          all the objects checking if thats the one we need to update.\n        </p>\n\n        <p>\n          Here comes spread operation to rescue, simply store the update object\n          in a variable and use it to update in the main object using spread\n          operator.\n        </p>\n\n        <p>Example :</p>\n        <div>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            let data =\n            {JSON.stringify(\n              {\n                11: {\n                  name: \"bishal\",\n                  class: 5,\n                  age: 10,\n                },\n                12: {\n                  name: \"john\",\n                  class: 4,\n                  age: 9,\n                },\n              },\n              null,\n              4\n            )}\n            <br />\n            <br />\n            let newData =\n            {JSON.stringify(\n              {\n                12: {\n                  name: \"john\",\n                  class: 5,\n                  age: 9,\n                },\n              },\n              null,\n              4\n            )}\n            <br />\n            let test = {`{ ...data, ...newData }`};<br />\n            console.log(test)\n          </pre>\n        </div>\n\n        <p>Result :</p>\n        <div>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            {JSON.stringify(\n              {\n                11: { name: \"bishal\", class: 5, age: 10 },\n                12: { name: \"john\", class: 5, age: 9 },\n              },\n              null,\n              4\n            )}\n          </pre>\n          <br />\n        </div>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default UpdatingNestedJavascript;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/migratingtoreactTable1.9ac3c80b.png\";","export default __webpack_public_path__ + \"static/media/migratingtoreactTable2.59a904ac.png\";","export default __webpack_public_path__ + \"static/media/migratingtoreactTable3.7ed2a0c0.jpeg\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MigratingtoreactTable1 from \"./images/migratingtoreactTable1.png\";\nimport MigratingtoreactTable2 from \"./images/migratingtoreactTable2.png\";\nimport migratingtoreactTable3 from \"./images/migratingtoreactTable3.jpeg\";\n\nconst MigratingToReactTable = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Migrating from Material-table to React-table\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          I had been noticing my simple website was taking 4-10 sec to load\n          completely on the first load. Its just one simple static about page\n          followed with 4 other links build on top of React, my first reaction\n          was <strong>how the hell it so slow ??</strong>. So I opened up the\n          Network tab in br/owser console, hard refreshed the website and\n          monitored it . below were my findings:\n        </p>\n        <ul>\n          <li>One of my chunk file size 1.7 MB.</li>\n          <li>\n            No content was being shown until that chunk file was fully loaded.\n          </li>\n          <li>My build size was ~9.6 MB.</li>\n        </ul>\n\n        <img src={MigratingtoreactTable1} alt=\"BigCo Inc. logo\" />\n\n        <p>\n          <br />\n        </p>\n        <p>\n          I knew the issue was because of large bundle size, so proceeded with\n          analyzing the bundle size for which I used{\" \"}\n          <a\n            href=\"https://create-react-app.dev/docs/analyzing-the-bundle-size/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <strong>source-map-explorer</strong>\n          </a>{\" \"}\n          package. The report result helped me determine why the bundle was so\n          big.\n        </p>\n        <p>\n          Material-table itself is a big packages and it has dependencies much\n          bigger which are left unused 99% of the time. Two package :\n        </p>\n        <ol>\n          <li>jspdf</li>\n          <li>react-beutiful-dnd</li>\n        </ol>\n        <p>\n          <a\n            href=\"https://imgur.com/eugJ8AG\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Package Analyze Result\n          </a>\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          The community has been requesting for Material-table to make these\n          packages optional since 2019 but not much has changed.So I searched\n          for alternatives and found react table to be dependable and am 100%\n          sure i will be using it for future projects. Right now I planning to\n          change the code base to use react-table but it will take time and will\n          update the post later with full updates,\n        </p>\n        <p>\n          <br />\n        </p>\n        <p>\n          So instead i made a simple optimization to speed up the project. I\n          have split the bundles using React's{\" \"}\n          <a\n            href=\"https://web.dev/code-splitting-suspense/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <strong>Lazy</strong>\n          </a>\n          <strong> </strong>method and it seems to have improved the page\n          loading speed down to 3-5 sec.\n        </p>\n\n        <img src={MigratingtoreactTable2} alt=\"BigCo Inc. logo\" />\n\n        <p>To be updated after migrating to React-table.</p>\n        <p>\n          <br />\n        </p>\n        <p>Update : 30 May 2021</p>\n        <p>\n          I have updated my code base by replacing material-table with\n          react-table, this has significantly reduced my build size. Before it\n          was 9.6 MB and now its 4.3 MB and now the website page size has\n          reduces from 1.7MB to 493KB and the page loads within 3-5 sec. I am\n          really pleased with the optimization result and will keep exploring\n          different ways to do so. My next thing on the list is to research and\n          implement React-query , a frontend based caching mechanism.\n        </p>\n\n        <p>\n          <a\n            href=\"https://imgur.com/vCeOr7c\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            New Package Analysis\n          </a>\n        </p>\n        <img\n          src={migratingtoreactTable3}\n          alt=\"BigCo Inc. logo\"\n          style={{ width: \"100%\" }}\n        />\n      </article>\n    </Fragment>\n  );\n};\n\nexport default MigratingToReactTable;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst IssuesDevTeam = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Issues with building a stable Dev team\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          I have been working on a project for overseas Portuguese company for 5\n          months now, during this period 5 developers came and left. I had ups\n          and down during this period, had to cover for things more than i had\n          signed up for. Finally after 5 month, we have a stable team of 3\n          developers and in this article I want to share my experiences.\n        </p>\n        <p>Lets start with the factors effecting the developers:</p>\n\n        <br />\n        <h2>Covid and remote working</h2>\n        <p>\n          The team was new composed of me and 2 other devs (Devs A and B), due\n          to covid we all had to work remotely. We used discord for\n          communicating with the foreign team, and tasks were assigned to us via\n          chats or PMs. We devs would help each other when we could and I would\n          encourage them to ask confusion topics, logic to PT team but besides\n          that they were on their own. Since other devs were little\n          inexperienced , I talked in their behalf at beginning but I was told\n          not to do so as each dev should do it by themselves.\n        </p>\n\n        <p>\n          After a month, dev (A) got frustrated with his work and he left\n          without any pre-notice. He was not getting proper help from PT team ,\n          didn't raise his issues to related person. Similarly , dev (B) had\n          told the PT team guys , the requested feature was being done , but he\n          left in 2 month as soon as he got his paycheck.\n        </p>\n\n        <p>\n          I learned that remote work is feasible only when the team is already\n          stable and has proper work process.\n        </p>\n\n        <br />\n        <h2>Not hiring the right person for the job</h2>\n        <p>\n          Hiring a junior backend developer and expecting them to help with all\n          aspect of the project is failure on the management part. You want to\n          build something complex , you need the right person for the job.\n        </p>\n        <br />\n        <h2>No work process and planning</h2>\n        <p>\n          At the beginning , there was an initial planning document but as the\n          project progressed there is none, most of the requirement are verbal\n          ie; <strong>we need this feature do this</strong> lol. Another issue I\n          had raised from the beginning is make tickets containing all the\n          details and requirements for task before assigning.\n        </p>\n\n        <br />\n        <h2>Low salary</h2>\n        <p>\n          Developers tend to leave their job when another company offers\n          reasonable or better salary.\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default IssuesDevTeam;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst CreateUserinSQL = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        Creating user in Postgres, SQL Server and Mysql\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <Typography variant=\"body2\" component=\"div\" gutterBottom>\n          <p>\n            I've had the opportunities to work with some popular Relational\n            Databases and in this artiles I would like to share how to create\n            users for each. The codes are short and straight to the point and I\n            wont be going into details. The only requirements are to have\n            database and a database client installed, in my case I use Dbeaver\n            as it supports all database I am going to cover.\n          </p>\n\n          <h3>Postgres </h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            sudo -u postgres psql\n            <br />\n            postgres=# create database mydb;\n            <br />\n            postgres=# create user myuser with encrypted password 'mypass';\n            <br />\n            postgres=# grant all privileges on database mydb to myuser;\n            <br />\n          </pre>\n\n          <h3>MySQL </h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            mysql -u root -p\n            <br />\n            CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';\n            <br />\n            GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost';\n            <br />\n            FLUSH PRIVILEGES;\n            <br />\n          </pre>\n\n          <h3>SQL Server (2019)</h3>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- Create a login and user\n            <br />\n            BEGIN TRAN;\n            <br />\n            BEGIN TRY\n            <br />\n            &emsp; &emsp;CREATE LOGIN DemoLogin WITH PASSWORD ='secret123#';\n            <br />\n            &emsp;&emsp; CREATE USER Demouser FOR LOGIN DemoLogin;\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_ddladmin','Demouser';\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_datareader','Demouser';\n            <br />\n            &emsp;&emsp; EXEC sp_addrolemember 'db_datawriter','Demouser';\n            <br />\n            &emsp; &emsp;COMMIT TRAN;\n            <br />\n            END TRY <br />\n            BEGIN CATCH <br />\n            &emsp;&emsp; ROLLBACK TRAN ;\n            <br />\n            &emsp;&emsp; select ERROR_MESSAGE(); <br />\n            END CATCH\n          </pre>\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- List all users\n            <br />\n            <br />\n            Revert execute as user='admin';\n            <br />\n            Select name as username, create_date, modify_date,&nbsp;\n            <br />\n            type_desc as type, authentication_type_desc as\n            authentication_type&nbsp;\n            <br />\n            from sys.database_principals&nbsp;\n            <br />\n            where type not in ('A', 'G', 'R', 'X') and&nbsp;\n            <br />\n            sid is not null and name != 'guest' order by username;&nbsp;\n            <br />\n          </pre>\n\n          <pre className=\"ql-syntax\" spellCheck=\"false\">\n            -- List all logins\n            <br />\n            <br />\n            Select sp.name as login, sp.type_desc as login_type,&nbsp;\n            <br />\n            sl.password_hash, sp.create_date, sp.modify_date,&nbsp;\n            <br />\n            case&nbsp;\n            <br />\n            &nbsp;&nbsp;when&nbsp;sp.is_disabled = 1 then 'Disabled'&nbsp;\n            <br />\n            else 'Enabled' end as status&nbsp;\n            <br />\n            from sys.server_principals sp&nbsp;\n            <br />\n            left join sys.sql_logins sl on sp.principal_id =\n            sl.principal_id&nbsp;\n            <br />\n            where sp.type not in ('G', 'R') order by sp.name;&nbsp;\n            <br />\n          </pre>\n        </Typography>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default CreateUserinSQL;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/SecureConnectionDB1.a5785802.jpg\";","export default __webpack_public_path__ + \"static/media/SecureConnectionDB2.5168a6ea.png\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SecureConnectionDB1 from \"./images/SecureConnectionDB1.jpg\";\nimport SecureConnectionDB2 from \"./images/SecureConnectionDB2.png\";\n\nconst SecureConnectionDB = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        Securely Connecting to remote Postgresql database\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"1rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          In my path to explore more on Server domain, I had purchased a small\n          VPS server with ubuntu distro. I learned setting up web servers, email\n          servers, SSL certificates, cronjobs and also databases , mostly RDBMS.\n        </p>\n\n        <p>\n          During that time I was more fond of PostgresSQL so I set it up on\n          server and could connect to it from CLI. Later I built an application\n          on using Postgres and tried connecting to it remotely , I failed. I\n          was confused and lost on how to connect to remote DB, after spending\n          hours on google and stackoverflow I found a way by editing the\n          postgres's configurations file. However this method allowed all IPs to\n          make connection to database, one could brute force his way making the\n          database laggy or even compromised.\n        </p>\n\n        <p>\n          Later I found there is a safer way, SSH Tunneling. You save your\n          public SSH key to the server and from your database client(DBeaver in\n          my case) select SSH tab then set host (serverip), username (server\n          user/root), in Authentication method select Public key and in private\n          key(your path to private ssh key). Also passphrase if you use one.\n        </p>\n        <img src={SecureConnectionDB1} alt=\"BigCo Inc. logo\" />\n        <p>In Main tab, insert your remote database credentials as below.</p>\n        <img src={SecureConnectionDB2} alt=\"BigCo Inc. logo\" />\n\n        <p>\n          Finally test the connection, if connected all good if not go figure :p{\" \"}\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default SecureConnectionDB;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/lambda.ca6e18b0.jpg\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport lambda from \"./images/lambda.jpg\";\n\nconst Serverless = (props) => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Getting started with Serverless 101\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          First time I heard the term Serverless was from my school classmate\n          (Software Developer), she asked me \"Have you worked with Lambda ?\".\n          This was mid 2019 and I had recently joined a company that was using\n          AWS as its cloud infrastructure. I had just started to work with some\n          AWS services like S3 bucket, EC2 & RDS and I was clueless about it.\n        </p>\n\n        <h3 className=\"mb-0\">Enter Year 2021</h3>\n        <p className=\"mt-0\">\n          The project I was working on aimed to provide rail-replacement service\n          for Railway operators. It had seperate repositories for\n          frontend(React) and backend(Symfony), however within backend there was\n          a dotnet code which would get called on certain events and insert data\n          to sql server database.\n        </p>\n\n        <h4 className=\"mb-0\">\n          <u>Problem</u>\n        </h4>\n        <p className=\"mt-0\">\n          The dotnet code was independent of the backend framework, often would\n          generate new unwanted files whenever making a build and was a tedious\n          job to maintaine dotnet version and packages. My project lead\n          mentioned the flow was synchronomous and would take time to complete\n          when given huge data.\n        </p>\n\n        <h4 className=\"mb-0 pb-0\">\n          <u>Solution</u>\n        </h4>\n        <p className=\"mt-0\">\n          As a solution, project lead suggested to migrate the dotnet code part\n          to lambda function (Serverless), treat it as a microservice and\n          explained how the architecture would look like.\n          <br />I implemented the necessary code changes and worte some\n          optimization for bulk insert, performed tests and added a entry point\n          for lambda. Then added a trigger to lambda, it would be triggered\n          whenever a new file is put into s3 bucket. Finally, made a build and\n          uploaded the zip file to lambda.\n        </p>\n        <p>\n          Deploying to lambda has removed the time that would had been used to\n          maintain dotnet dipendencies and the performance has improved\n          drastically with bulk insert optimization. Before it took 15 mins to\n          insert 15000 entities now it takes 30-45 sec.\n          <br />( Tell me thats impressive 😁)\n        </p>\n        <p>\n          Another useful feature is we can scale up the function as we go,\n          currently the RAM limit is set to 512 MB which can be easily increased\n          via AWS web console. Also, all the lambda logs be viewed in the\n          cloudwatch which would help if you need to debug later.\n        </p>\n\n        <p>The project architectures looks like this :</p>\n        <p>\n          <img src={lambda} alt=\"Github\" />\n        </p>\n\n        <h4 className=\"mb-0 pb-0\">\n          <u>My view on serverless</u>\n        </h4>\n        <div>\n          I would not recommend to start new project using serverless stack as\n          you will be limited by the functionality available but if you plan on\n          making a microservice for your existing project then its a good\n          choice.\n          <p>\n            With a server like EC2 or a VPS you can setup web servers, run cron\n            jobs, setup databases or even store files and data but with\n            serverless you can't do all that.\n          </p>\n          Some of advantages :<li>Quick deployments</li>\n          <li>No server management is necessary</li>\n          <li>\n            Developers are only charged for the server space they use, reducing\n            cost\n          </li>\n          <li>Serverless architectures are scalable</li>\n          <li>\n            Serverless such AWS Lambda function can be integrated with other AWS\n            services\n          </li>\n        </div>\n        <p>\n          Points taken from :\n          <a\n            href=\"https://www.cloudflare.com/learning/serverless/why-use-serverless/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Link\n          </a>\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default Serverless;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/vps1.4e63c0fd.png\";","export default __webpack_public_path__ + \"static/media/vps2.6f13b4ff.png\";","import React, { Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport vps1 from \"./images/vps1.png\";\nimport vps2 from \"./images/vps2.png\";\n\nconst NoVpsAnymore = (props) => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}I Don't need a VPS anymore\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          I've paid for a VPS subscription, for my own use, for the last two and\n          half years (30 Months). Mainly for serving web traffic, running cron\n          jobs, hosting databases, exploring SSL certificates and for other bits\n          and pieces.\n        </p>\n\n        <Grid container className=\"my-4\" spacing={2}>\n          <Grid item xs={6}>\n            <a\n              href=\"https://www.prabhuhost.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"text-link\"\n            >\n              Prabhu Hosting\n            </a>\n            <img src={vps1} alt=\"VPS Bill 1\" />\n          </Grid>\n\n          <Grid item xs={6}>\n            <a\n              href=\"https://nestnepal.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"text-link\"\n            >\n              Nest Nepal\n            </a>\n            <img src={vps2} alt=\"VPS Bill 2\" />\n          </Grid>\n        </Grid>\n\n        <p>\n          But, as of now that that era in my life has come to a close. May 7,\n          I've have requested for service cancellation. No more (personal)\n          server that I wholly or partially manage. No more SSH'ing in. No more\n          updating Linux kernel / packages. No more Apache / Nginx setup. No\n          more MySQL /{\" \"}\n          <a\n            href=\"https://bishaludash.com.np/articles/securely_connecting_to_remote_postgresql_database\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            PostgreSQL\n          </a>{\" \"}\n          administration. No more SSL certificates to renew. No more CPU / RAM\n          usage to monitor.\n        </p>\n\n        <p className=\"mt-0\">\n          In its place, I've fully embraced SaaS. In particular, I've converted\n          my personal web sites, and most of the other web sites in my github\n          repository, to be statically generated, and to be hosted on\n          Github-pages and some requiring a backend api and database in Heroku.\n        </p>\n\n        <h4 className=\"mb-0\">\n          <u>Reasons for moving away from VPS</u>\n        </h4>\n        <ul className=\"article-list\">\n          <li>\n            My new setup is completely free which is mind-boggling. My\n            bishaludash.com.np ccTLD is free of cost, courtesy of{\" \"}\n            <a href=\"https://register.com.np/\" rel=\"noreferrer\" target=\"_blank\">\n              Mercantile Nepal\n            </a>\n            . The code is stored on github repository and served via git hub\n            pages. Finally, the domain points to cloudflare nameserver which\n            point to github pages and this is how you get this page served.\n          </li>\n          <li>\n            I don't have to tell others about how I reduces page load time by{\" \"}\n            <a\n              href=\"https://bishaludash.com.np/articles/migrating_from_material_table_to_react_table_2\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              refactoring\n            </a>{\" \"}\n            my code. The most efficient way to achieve this is by using a CDN\n            which Cloudflare covers for me and it's highly available, and\n            lightning-fast, and secure out-of-the-box.\n          </li>\n          <li>\n            Sysadmin is now Somebody Else's Problem. I don't have to worry about\n            security, SSH key being compromised, setting up firewall and locking\n            port 22 preventing myself from SSH'ing the server (this actually\n            happened), emails telling me my SSL certificate is going to expire.\n          </li>\n\n          <li>\n            SaaS is one that's getting harder to ignore with each passing year.\n            In my recent project, we had a service written in dotnet and our\n            entire backend was in PHP, so we decided to use a serverless compute\n            ie. AWS's Lambda function and deployed on top of it. Worked\n            brilliantly, no package management required, no need to allocate an\n            entire machine just deploy the build and the logs were eaily\n            available if needed to debug.\n          </li>\n          <li>\n            Easy Code Deployment.I had not set any pipelines for my personal\n            projects and my approach was to SSH into vps , do git pull , make\n            build and move to path nginx was pointing. But after switching to\n            github-pages its a one line code that makes a new build and updates\n            changes to github-pages. The changes are reflected within 30s- 1min.\n            <pre className=\"ql-syntax\" spellCheck=\"false\">\n              yarn deploy\n            </pre>\n          </li>\n\n          <li>\n            And then there's cost. I had quite a chunky 4GB RAM 2VCpu VPS (HDD\n            version) for the last few years, which was costing me USD$8-10 /\n            month. This was beefier than I really needed and in the last 3-4\n            months I was not using it much and felt like it hurt my wallet a\n            little bit when they changed from monthly to semi-anually payment\n            scheme.\n          </li>\n        </ul>\n\n        <p className=\"mt-5\">\n          With the new setup, I still have some responsibility for security ,\n          that is responsibility for my own credentials, keeping my private SSH\n          key safe and not pushing credentials into public git repository.\n        </p>\n        <p>\n          As of year 2022, you have multiple ways for deploying online and\n          deploying using SaaS is an option. It is up to your own opinion. I\n          feel that my new setup is good enough.\n        </p>\n\n        <p>\n          Article inspired from{\" \"}\n          <a\n            href=\"https://greenash.net.au/thoughts/2022/03/i-dont-need-a-vps-anymore/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Link\n          </a>\n        </p>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default NoVpsAnymore;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","export default __webpack_public_path__ + \"static/media/reserved_instance.70329a8a.PNG\";","export default __webpack_public_path__ + \"static/media/cost_explorer.ee71b80f.PNG\";","import React, { Fragment } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport reserved_instance from \"./images/reserved_instance.PNG\";\nimport cost_explorer from \"./images/cost_explorer.PNG\";\n\nconst ReduceRDSPricing = (props) => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      {/*title*/}\n      <Typography variant=\"h5\" color=\"primary\">\n        {/* {article.title} */}Reduce RDS Pricing\n      </Typography>\n\n      {/*Date and tags*/}\n      <Typography\n        variant=\"caption\"\n        display=\"block\"\n        style={{ marginBottom: \"2rem\" }}\n      >\n        {/* {new Date(article.created_at).toDateString()} */}\n        {new Date(props.createdAt).toDateString()}\n        {props.tags?.split(\",\").length > 0\n          ? props.tags\n              .split(\",\")\n              .map((item, key) => (\n                <Chip\n                  key={key}\n                  size=\"small\"\n                  label={item}\n                  color=\"secondary\"\n                  className={classes.pills}\n                />\n              ))\n          : null}\n      </Typography>\n\n      {/* Edited date */}\n      {props.createdAt !== props.updatedAt ? (\n        <Typography variant=\"caption\" display=\"block\">\n          <Chip\n            size=\"small\"\n            label={`Edited : ${new Date(props.updatedAt).toDateString()}`}\n            color=\"secondary\"\n            className={classes.pills}\n          />\n        </Typography>\n      ) : null}\n\n      {/*content*/}\n      <article>\n        <p>\n          Data is cornerstone of any modern software application, and database\n          are the most common way to store and manage data used by modern\n          applications. Databases are backbone of any business because they\n          contain information on every aspect of your business. Hence, Security\n          is of prime concern, which can be achieved in two ways :\n        </p>\n        <ul>\n          <li>Hire DBA, Cyber Security Experts </li>\n          <li>Use Managed Third party service</li>\n        </ul>\n        <p className=\"mt-0\">\n          For a startup or growing company, the first option is expensive and\n          sometimes out of the option. This is where a managed third party\n          services such as AWS, GCP takes the spotlight. They tend to be cheaper\n          than former, easy to initialize , easy to use (with some Cloud\n          experience) and available on demand.\n        </p>\n        <small>\n          <i>\n            <u>\n              Note : I'm not saying third party services saves you from all the\n              trouble of managing and maintaining services but major security\n              risks are covered. A developer with database experience can easily\n              familiarize and work with the service.\n            </u>\n          </i>\n        </small>\n        <br></br>\n        <br></br>\n        <h4 className=\"mb-0\">\n          <u>Problem Statement</u>\n        </h4>\n        <p className=\"mt-0\">\n          My workplace makes heavy usage of Relational Database Services(RDS),\n          there are 5 projects at the moment with each project having at least 1\n          SQL Server database and some having 2 SQL Server, one for UAT testing\n          and other for production. In past there were about 19 SQL Server\n          database.\n        </p>\n        <p>\n          If you check the SQL Server standard database pricing (Single AZ) and\n          compare it with equivalent MySQL or Postgres ((Single AZ)), we can\n          find SQL Server is 3 times (or more) expensive than the later (differs\n          by Deployment model).\n        </p>\n        {/* Database Pricing */}\n        <table>\n          <thead>\n            <tr>\n              <th>DB Engine</th>\n              <th>Instance</th>\n              <th>Price per hour</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>SQL Server</td>\n              <td>db.t3.xlarge</td>\n              <td>$1.044</td>\n            </tr>\n            <tr>\n              <td>MySQL</td>\n              <td>db.t3.xlarge</td>\n              <td>$0.272</td>\n            </tr>\n            <tr>\n              <td>Postgres</td>\n              <td>db.t3.xlarge</td>\n              <td>$0.290</td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n        {/*  */}\n        <p>\n          There was a massive cost raised by the Relational Database Service\n          alone. Before there were total 19 RDS and monthly cost is as below :\n        </p>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr>\n              <td>June 2021</td>\n              <td>$6,815.25</td>\n            </tr>\n            <tr>\n              <td>July 2021</td>\n              <td>$6,585.16</td>\n            </tr>\n            <tr>\n              <td>Aug 2021</td>\n              <td>$4,868.57</td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <h4 className=\"mb-0 pb-0\">\n          <u>Research and Findings</u>\n        </h4>\n        <ul>\n          <li>\n            Major reason for higher RDS cost was due to database engine : SQL\n            Server.\n          </li>\n          <li>\n            Changing the database engine is not an option as the backend and\n            docker image was setup to work with SQL Server only. Other unknown\n            issues which might stop progamme form running.\n          </li>\n          <li>Under SQL Server engine there were cheaper deployment models.</li>\n          <li>\n            Some of the database are in idle state and not used much. These\n            databases were created by previous devs and were no longer managed,\n            however since they are still running they contribute to the billing.\n          </li>\n        </ul>\n        <h4 className=\"mb-0 pb-0\">\n          <u>Measures Taken</u>\n        </h4>\n        <ol>\n          {/* Point 1 */}\n          <li>Delete stale database</li>\n          <p>\n            Delete the databases created by previous devs which were no longer\n            in use as they were still running and contributed to the billing.\n            Before there were 19 DBs , after careful evaluation the number was\n            reduces to 14 DBs.\n          </p>\n\n          {/* Point 2 */}\n          <li>Change DB deployment models</li>\n          <p>\n            Although changing DB engines was not possible, changing deployment\n            model was. Previously used SQL Server deployment model was{\" \"}\n            <strong>Standard (Single AZ)</strong>, they are lavishly expensive.\n            Other cheap option was to use the Express or Web deployment model.\n          </p>\n          <ul>\n            <li>Express</li>\n            <p>\n              Express being the cheapest option out of all had some limitations\n              such as max database size limit was 10GB, can only use a maximum\n              of 1410 MB memory per instance. This limited it to be used in\n              production but was good enough to be used for the dev/UAT\n              environment. DB for some projects were migrated to Express.\n            </p>\n            <li>Web</li>\n            <p>\n              Web edition was cheaper than Standard edition but expensive than\n              Express. However, it did not have the limitation of Express and\n              all production DBs have been moved to this deployment model.\n            </p>\n            <a\n              href=\"https://www.znetlive.com/blog/feature-comparison-of-ms-sql-server-editions/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Source : Express vs Web Edition\n            </a>\n          </ul>\n\n          {/* Point 3 */}\n          <br />\n          <li>Purchase Reserved instance</li>\n          <p>\n            Final step to reduce the DB cost was to use reserved DB instances.\n            Purchasing reserved DB instance provided us with discount price\n            compared to on-demand DB instance pricing.\n          </p>\n          <p>\n            We purchased reserved DB instances : 1 year term with no upfront\n            payment of 4 databases only because you will have to commit to this\n            even after you delete the RDS DB instance.\n          </p>\n\n          <h4>\n            <u>Reserved Instance</u>\n          </h4>\n          <ul>\n            <li>\n              At first, I thought reserved instance was different type of DB\n              instance which one need to purchase to use. I was wrong, its\n              basically a discount coupon which can you purchase and is applied\n              to the billing of month automatically.\n            </li>\n            <li>\n              You have a separate page for reserved instance under RDS section\n              from where you can purchase it. You ll need to fill form that\n              matched your requirements.\n              <img src={reserved_instance} alt=\"reserved_instance\" />\n            </li>\n            <li>\n              After purchasing a reserved Db instance, this discount coupon will\n              be applied to the RDS DB that matches with information provided in\n              above step II.\n            </li>\n            <li>\n              Reserved DB instance discounted price will take into effect the\n              very next day you purchase it. One confusing behavior was, it is\n              always applied on the first day of new month from next time\n              onwards.\n              <p>\n                Below attached cost explorer image shows, all the reserved\n                instance cost for the month August is charged in Aug 1. In Aug\n                3, we purchased a new Reserved instance, its charge for the\n                remaining days in month is charge the next day.\n              </p>\n            </li>\n\n            <img src={cost_explorer} alt=\"cost_explorer\" />\n            <li>\n              One important note : if you purchased a reserved instance for a\n              data and 3 months down you delete the database, you will still\n              have to pay for the remaining time term of the reserved instance.{\" \"}\n            </li>\n          </ul>\n        </ol>\n\n        <h4 className=\"mb-0 pb-0\">\n          <u>Cost After</u>\n        </h4>\n        <p>14 RDS consisting of Express and Web deployment models.</p>\n        <table>\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr>\n              <td>September 2022</td>\n              <td>$1,242.61</td>\n            </tr>\n            <tr>\n              <td>August 2022</td>\n              <td>$1,271.94</td>\n            </tr>\n            <tr>\n              <td>July 2022</td>\n              <td>$1,414.15</td>\n            </tr>\n          </tbody>\n        </table>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default ReduceRDSPricing;\n\nconst useStyles = makeStyles({\n  pills: {\n    fontSize: \".9rem\",\n    margin: \"0 5px\",\n  },\n});\n","import GitMeSomeKnowledge from \"./GitMeSomeKnowledge\";\nimport AwsCliCheatsheet from \"./AwsCliCheatsheet\";\nimport ArticlesWorthReading from \"./ArticlesWorthReading\";\nimport UpdatingNestedJavascript from \"./UpdatingNestedJavascript\";\nimport MigratingToReactTable from \"./MigratingToReactTable\";\nimport IssuesDevTeam from \"./IssuesDevTeam\";\nimport CreateUserinSQL from \"./CreateUserinSQL\";\nimport SecureConnectionDB from \"./SecureConnectionDB\";\nimport Serverless from \"./Serverless\";\nimport NoVpsAnymore from \"./NoVpsAnymore\";\nimport ReducingRDSPricing from \"./ReducingRDSPricing\";\n\nexport const Posts = [\n  {\n    title: \"Creating user in Postgres, SQL Server and Mysql\",\n    slug_title: \"creating_user_in_postgres_sqlserver_mysql\",\n    summary:\n      \"Straight to the point SQL queries to create users in some of popular relational databases.\",\n    tags: \"Database, Postgres, SQL server, Mysql\",\n    status: \"publish\",\n    created_at: \"2021-12-01\",\n    updated_at: \"2021-12-01\",\n    component: CreateUserinSQL,\n  },\n  {\n    title: \"AWS Cli cheatsheet for S3\",\n    slug_title: \"aws_cli_cheatsheet_for_s3\",\n    summary: \"Collection of helpful  cli commands for S3 bucket\",\n    tags: \"aws, s3, aws cli\",\n    status: \"publish\",\n    created_at: \"2021-10-20\",\n    updated_at: \"2021-10-20\",\n    component: AwsCliCheatsheet,\n  },\n  {\n    title: \"Articles worth reading\",\n    slug_title: \"articles_worth_reading\",\n    summary:\n      \"Here is a list of articles that I stumbled upon when going through Hackernews and surfing the web that are worth reading.\",\n    tags: \"Reads, Knowledge\",\n    status: \"publish\",\n    created_at: \"2021-09-02\",\n    updated_at: \"2022-06-29\",\n    component: ArticlesWorthReading,\n  },\n  {\n    title: \"Updating a nested object in Javascript\",\n    slug_title: \"updating_a_nested_object_in_javascript_2\",\n    summary: \"Updating a specific key in Object using spread operator.\",\n    tags: \"Javascript\",\n    status: \"publish\",\n    created_at: \"2021-06-18\",\n    updated_at: \"2021-06-18\",\n    component: UpdatingNestedJavascript,\n  },\n  {\n    title: \"Migrating from Material-table to React-table\",\n    slug_title: \"migrating_from_material_table_to_react_table_2\",\n    summary:\n      \"Material Ui has been my go to UI library for every react projects and I have been using material-table as it plays nice with the former. But considering the dependencies that comes along with it might be worth considering other options.\",\n    tags: \"React, Optimization\",\n    status: \"publish\",\n    created_at: \"2021-05-19\",\n    updated_at: \"2021-06-01\",\n    component: MigratingToReactTable,\n  },\n  {\n    title: \"Securely Connecting to remote Postgresql database\",\n    slug_title: \"securely_connecting_to_remote_postgresql_database\",\n    summary:\n      \"In this article , we discuss on how to remotely connect to Postgres SQl database in secure manner.\",\n    tags: \"Database, Postgres, Dbeaver\",\n    status: \"publish\",\n    created_at: \"2021-05-09\",\n    updated_at: \"2021-06-01\",\n    component: SecureConnectionDB,\n  },\n  {\n    title: \"Issues with building a stable Dev team\",\n    slug_title: \"issues_with_building_a_stable_dev_team\",\n    summary: \"Things I learned when managing a team.\",\n    tags: \"Slice of Life\",\n    status: \"publish\",\n    created_at: \"2021-03-03\",\n    updated_at: \"2021-06-01\",\n    component: IssuesDevTeam,\n  },\n  {\n    title: \"Git me some knowledge\",\n    slug_title: \"git_me_some_knowledge_2\",\n    summary: \"A post on funny issue I encountered with git.\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2021-02-21\",\n    updated_at: \"2021-06-01\",\n    component: GitMeSomeKnowledge,\n  },\n  {\n    title: \"Getting started with Serverless 101\",\n    slug_title: \"serverless_101\",\n    summary: \"A brief summary on my take on serverless and how I used it.\",\n    tags: \"AWS, Lambda\",\n    status: \"publish\",\n    created_at: \"2022-02-15\",\n    updated_at: \"2022-02-15\",\n    component: Serverless,\n  },\n  {\n    title: \"I Don't need a VPS anymore\",\n    slug_title: \"no_vps_anymore\",\n    summary:\n      \"My 2 years adventure of managing VPS has come to an end. In this article, I share about my experience, growth and accepting the modern technologies to make my life easier.\",\n    tags: \"Server, VPS, Linux\",\n    status: \"publish\",\n    created_at: \"2022-05-07\",\n    updated_at: \"2022-05-07\",\n    component: NoVpsAnymore,\n  },\n  {\n    title: \"Reduce RDS Pricing\",\n    slug_title: \"reduce_rds_pricing\",\n    summary:\n      \"A report on ways to reduce the cost of RDS database. This article covers various steps implemented to reduce cost and cost summary report after changes.\",\n    status: \"publish\",\n    tags: \"Database, RDS, Database\",\n    created_at: \"2022-10-27\",\n    updated_at: \"2022-10-27\",\n    component: ReducingRDSPricing,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport { routes } from \"./posts/PostIndex\";\n\nconst ListArticles = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n\n  const showTags = (tags) => {\n    if (!tags || tags === null) {\n      return null;\n    }\n\n    return tags\n      .split(\",\")\n      .map((item, key) => (\n        <Chip\n          key={key}\n          className={`${classes.chipStyle} ml-1`}\n          label={item.trim()}\n          size=\"small\"\n        />\n      ));\n  };\n\n  if (loading) {\n    return (\n      <center>\n        <CircularProgress className=\"mt-5\" />\n      </center>\n    );\n  }\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n            <span className=\"ml-3\">{showTags(item.tags)}</span>\n          </div>\n\n          <Link to={`/articles/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n\n          <Typography variant=\"body2\" gutterBottom>\n            {item.summary}\n          </Typography>\n\n          <Link to={`/articles/${item.slug_title}`} className={classes.links}>\n            <Typography gutterBottom color=\"primary\">\n              Read this article\n              <ArrowRightAltIcon\n                variant=\"overline\"\n                style={{ marginBottom: \"-10px\", marginLeft: \"10px\" }}\n              />\n            </Typography>\n          </Link>\n        </div>\n      ))}\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListArticles;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"3rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/PostIndex\";\n\nconst ShowArticle = () => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <Switch>\n      {/* Route to post component along with dates */}\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/articles/${item.slug_title}`}\n          render={(props) =><item.component {...props}  createdAt={item.created_at} \n          updatedAt={item.updated_at} tags={item.tags}/>}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/articles\" />\n    </Switch>\n  );\n};\n\nexport default ShowArticle;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListArticles from \"./ListArticles\";\nimport ShowArticle from \"./ShowArticle\";\n\nconst Article = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/articles\" component={ListArticles} />\n      <Route exact path=\"/articles/:slug\" component={ShowArticle} />\n    </Switch>\n  );\n};\n\nexport default Article;\n","export default __webpack_public_path__ + \"static/media/college.8404f8ba.jpeg\";","export default __webpack_public_path__ + \"static/media/college_dab.05691a27.jpeg\";","export default __webpack_public_path__ + \"static/media/mustang.a09106f8.jpeg\";","export default __webpack_public_path__ + \"static/media/labim_college.76f356c2.jpeg\";","export default __webpack_public_path__ + \"static/media/cycling.5ca3581b.jpeg\";","export default __webpack_public_path__ + \"static/media/CG.42670b6f.jpeg\";","export default __webpack_public_path__ + \"static/media/pokhara.5b164d51.jpeg\";","export default __webpack_public_path__ + \"static/media/sarankot.9f546812.jpeg\";","export default __webpack_public_path__ + \"static/media/abc.b68cdd5c.jpeg\";","export default __webpack_public_path__ + \"static/media/abc_two.c4a06c0e.jpeg\";","export default __webpack_public_path__ + \"static/media/graduation.6a9a484d.jpeg\";","export default __webpack_public_path__ + \"static/media/hike.e156c82b.jpeg\";","export default __webpack_public_path__ + \"static/media/office_outing.592165e9.jpeg\";","export default __webpack_public_path__ + \"static/media/office_outing2.1b0e59ea.jpeg\";","export default __webpack_public_path__ + \"static/media/poker.bfc7aa16.jpeg\";","export default __webpack_public_path__ + \"static/media/pokhara_2.c4d76820.jpeg\";","export default __webpack_public_path__ + \"static/media/pokhara_3.8fc3552a.jpeg\";","export default __webpack_public_path__ + \"static/media/sujan.fee13c64.jpeg\";","export default __webpack_public_path__ + \"static/media/covid_2.a2fe9952.jpeg\";","export default __webpack_public_path__ + \"static/media/sherpa.333778da.jpeg\";","export default __webpack_public_path__ + \"static/media/sherpa_farewell.234a7687.jpeg\";","export default __webpack_public_path__ + \"static/media/beer_pong.fbd848c1.jpeg\";","export default __webpack_public_path__ + \"static/media/dhulikhel.c3e7f769.jpeg\";","export default __webpack_public_path__ + \"static/media/pottery.4df4ea53.jpeg\";","export default __webpack_public_path__ + \"static/media/sister_wedding.df459dc1.jpeg\";","export default __webpack_public_path__ + \"static/media/butwal_flight.995de86f.jpeg\";","export default __webpack_public_path__ + \"static/media/langtang.1e3e5964.jpeg\";","export default __webpack_public_path__ + \"static/media/pizza.5ee8eca5.jpeg\";","export default __webpack_public_path__ + \"static/media/pushups.e95056f1.jpeg\";","export default __webpack_public_path__ + \"static/media/wolf_fish.60344aae.jpeg\";","export default __webpack_public_path__ + \"static/media/wolf_outing.bd5f4928.jpeg\";","export default __webpack_public_path__ + \"static/media/yomari.bf70d392.jpeg\";","export default __webpack_public_path__ + \"static/media/wolf_holi.0ba117b3.jpeg\";","export default __webpack_public_path__ + \"static/media/kic_meet.2d345395.png\";","import FiveYearsAsSWE from \"./FiveYearsAsSWE\";\n\nexport const Posts = [\n  {\n    title: \"5 years as Software Engineer\",\n    slug_title: \"5_years_as_software_engineer\",\n    summary: \"A post on funny issue I encountered with git.\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2023-03-12\",\n    updated_at: \"2023-03-12\",\n    component: FiveYearsAsSWE,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","import React from \"react\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport college from \"./images/FiveYearsAsSWE/college.jpeg\";\nimport college_dab from \"./images/FiveYearsAsSWE/college_dab.jpeg\";\nimport mustang from \"./images/FiveYearsAsSWE/mustang.jpeg\";\n\nimport labim_college from \"./images/FiveYearsAsSWE/labim_college.jpeg\";\nimport cycling from \"./images/FiveYearsAsSWE/cycling.jpeg\";\nimport CG from \"./images/FiveYearsAsSWE/CG.jpeg\";\nimport pokhara from \"./images/FiveYearsAsSWE/pokhara.jpeg\";\nimport sarankot from \"./images/FiveYearsAsSWE/sarankot.jpeg\";\n\nimport abc from \"./images/FiveYearsAsSWE/abc.jpeg\";\nimport abc_two from \"./images/FiveYearsAsSWE/abc_two.jpeg\";\nimport graduation from \"./images/FiveYearsAsSWE/graduation.jpeg\";\n\nimport hike from \"./images/FiveYearsAsSWE/hike.jpeg\";\nimport office_outing from \"./images/FiveYearsAsSWE/office_outing.jpeg\";\nimport office_outing2 from \"./images/FiveYearsAsSWE/office_outing2.jpeg\";\nimport poker from \"./images/FiveYearsAsSWE/poker.jpeg\";\nimport pokhara_2 from \"./images/FiveYearsAsSWE/pokhara_2.jpeg\";\nimport pokhara_3 from \"./images/FiveYearsAsSWE/pokhara_3.jpeg\";\nimport sujan from \"./images/FiveYearsAsSWE/sujan.jpeg\";\nimport covid_2 from \"./images/FiveYearsAsSWE/covid_2.jpeg\";\n\nimport sherpa from \"./images/FiveYearsAsSWE/sherpa.jpeg\";\nimport sherpa_farewell from \"./images/FiveYearsAsSWE/sherpa_farewell.jpeg\";\nimport beer_pong from \"./images/FiveYearsAsSWE/beer_pong.jpeg\";\nimport dhulikhel from \"./images/FiveYearsAsSWE/dhulikhel.jpeg\";\nimport pottery from \"./images/FiveYearsAsSWE/pottery.jpeg\";\nimport sister_wedding from \"./images/FiveYearsAsSWE/sister_wedding.jpeg\";\nimport butwal_flight from \"./images/FiveYearsAsSWE/butwal_flight.jpeg\";\n\nimport langtang from \"./images/FiveYearsAsSWE/langtang.jpeg\";\nimport pizza from \"./images/FiveYearsAsSWE/pizza.jpeg\";\nimport pushups from \"./images/FiveYearsAsSWE/pushups.jpeg\";\nimport wolf_fish from \"./images/FiveYearsAsSWE/wolf_fish.jpeg\";\nimport wolf_outing from \"./images/FiveYearsAsSWE/wolf_outing.jpeg\";\nimport yomari from \"./images/FiveYearsAsSWE/yomari.jpeg\";\nimport wolf_holi from \"./images/FiveYearsAsSWE/wolf_holi.jpeg\";\nimport kic_meet from \"./images/FiveYearsAsSWE/kic_meet.png\";\n\nconst FiveYearsAsSWE = () => {\n  return (\n    <div>\n      <div className=\"intro mb-5\">\n        <h1>March 2023</h1>\n        <h1>5 years of life as a Software Engineer&nbsp;</h1>\n        <p>\n          Hi fellow readers 👋, I am Bishal. As the title suggests this post is\n          going to cover the experiences I've been able to accumulate over the 5\n          years of my life; I will try to touch on different aspects and not\n          limit strictly to career. I try to be as open as possible while\n          writing here. 🙂\n        </p>\n      </div>\n\n      <div className=\"year mb-5\">\n        <h2>Year 0 (2017)</h2>\n        <p>\n          Chose to study Computer Science as I loved playing computer games like\n          GTA : Vice City, Dota &amp; Counter Strike, also because I had done\n          some web stuff :&nbsp; HTML, CSS while at school and was good at it .\n          How hard can this be right? 3 years down the college, I was pretty\n          much failing all semesters till 5th. When TU published result my mom\n          used to pray that I failed only one subject , and it did work for the\n          first year&nbsp; 😂.&nbsp;\n        </p>\n        <p>\n          I was then working part time at a Civil Engineering consultancy (10k)\n          which had helped me save some cash for a college trip to Jomsom and\n          Mustang. The work was okay and being paid gave a different kind of\n          happiness.I had to do different office visits frequently, I didn't\n          have my own vehicle and Pathao wasn't a thing back then which led to\n          exhaustion and burnout. At this point, I'd realized that a frequent\n          commuting job is not for me.\n        </p>\n        <p>\n          During 5th sem, I noticed that if I don't clear my back-papers, I\n          won't be able to participate in my graduation but neither were my\n          friends, so all was okay . Also, this was the peak flirting phase,\n          funny days, maybe you should email me yours?&nbsp;\n        </p>\n        <p>\n          At 6th sem, fear started kicking in and this is the point in my life\n          where I went full 180, got ambitious and started clearing back papers\n          from 2nd sem. Learned programming via online resources and created a\n          mobile Game : Esie, got an internship at Crossover. I had a good\n          mentor Bipin Tamang, he's helped me grow both professionally and\n          personally, also we keep in touch and go hikes when feasible.&nbsp;\n        </p>\n\n        <Alert severity=\"success\" icon={false} className=\"mt-5\">\n          <AlertTitle>TLDR;</AlertTitle>I graduated with a degree in Computer\n          Science. Just a normal kid wondering what it meant to be cool. I\n          participated in some programming events, had an internship and made a\n          mobile game &amp; some websites.\n        </Alert>\n\n        <Grid container spacing={3} className=\"mt-3\">\n          <Grid item xs={4}>\n            <img src={college} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={college_dab} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={mustang} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n        </Grid>\n      </div>\n\n      <hr />\n      <div className=\"year mb-5\">\n        <h2>Year 1 (2018)</h2>\n        <p>\n          By year 1, the prospect of an actual SWE job was on the horizon. I got\n          my first job at Chaudhary Group (19K). At this point, I was basically\n          teaching myself programming and database skills as required. I worked\n          on an internal office software CG Connect, which allowed sharing\n          company news, general documents and other features. I'd meet with\n          people from the Communication and HR dept, understand their\n          requirements and incorporate it into software.\n        </p>\n        <p>\n          I'd go to movies, anime expo, cycling and have night outs with\n          friends; one was at Chitlang.\n        </p>\n        <p>\n          In my spare time, I'd build silly websites using PHP and jQuery. Most\n          apps were pretty bad as the whole code was spaghetti, but fun. I\n          Switched to linux and learned some bash. I did this alone for about 8\n          months and felt like I was not growing. There was this feeling “I\n          don't know enough” and realized I wasn't communicating as easily as I\n          used to.I informed my situation to the Department manager after which\n          I got assigned to senior software engineers Bal Krishn Shrestha and\n          Naresh Shrestha.\n        </p>\n        <p>\n          I got the opportunity to work with mentors on other projects and was\n          able to grasp concepts such as api, ORM and git for working with a\n          team. Started using the Laravel framework, productivity goes through\n          the roof. My mentors were easy to talk to and guided me navigate\n          through career choices for which I will be forever thankful.\n        </p>\n        <p>\n          For vacation, I went to pokhara. Rented a scooter and drove to\n          Sarangkot and Begnas taal.\n        </p>\n\n        <Alert severity=\"success\" icon={false} className=\"mt-5\">\n          <AlertTitle>TLDR;</AlertTitle>I got my first SWE job. Until the first\n          8 months, I was doing solo programming, was lost. Found mentors who\n          helped me navigate to the proper career path.&nbsp;\n        </Alert>\n\n        <Grid container spacing={3} className=\"mt-3\">\n          <Grid item xs={4}>\n            <img src={cycling} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={pokhara} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={sarankot} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={labim_college} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={CG} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n        </Grid>\n      </div>\n      <hr />\n\n      <div className=\"year mb-5\">\n        <h2>Year 2 (2019)</h2>\n        <p>\n          Year two, got involved in more projects at CG, we had to travel to a\n          warehouse at Satungal to discuss project requirements, and was able to\n          get a vision on how software was changing the business industry.\n        </p>\n        <p>\n          After working on CG Connect for over a year it was terminated,\n          corporate bureaucracy stuff.\n        </p>\n        <p>\n          Met with friends from schools and college when possible, some were\n          involved in the IT industry like me and we had discussions on a wide\n          range of topics. I genuinely loved knowing about techs they were\n          using, they gave me a list of things to learn in future.\n        </p>\n        <p>\n          I had been planning a trip to Annapurna Base Camp with friends since\n          college. Finally, the time had come and a group of 6 went on ABC trek\n          during Dashain. Friend's dad had a travel agency and had planned out\n          the itinerary and lodging for us.\n        </p>\n        <p>\n          My bachelor's Graduation ceremony (Big Day) was coming, and I attended\n          with my mom &amp; good friend Khema.\n        </p>\n        <p>\n          I got promoted to an executive (27k). I mentored a coworker, built\n          apis for mobile applications and learned some server stuff. Work was\n          okay but there was unrest within, I had a hunger to learn a bunch of\n          stuff. Also, AI &amp; ML technologies were booming then and a part of\n          me had FOMO. Felt the need to switch to a proper software company for\n          growth.\n        </p>\n        <p>\n          My cousin recommended that her workplace Tekvortex was hiring, so I\n          applied and got the job (35k). Comfort zone literally jumped from the\n          window. Previously I worked as a full stack developer and now as data\n          analyst, half of the stuff learned before was not useful anymore. I\n          got the opportunity to explore cloud technologies and saw actual usage\n          of statistics to achieve data driven results. Also, met many talented\n          software engineers and amongst them I consider two to be my\n          mentors.&nbsp;\n        </p>\n        <ol>\n          <li>\n            one was ingenious programmer but had shit communication skills\n          </li>\n          <li>\n            the other was shit programmer but had astonishing communication\n            skills\n          </li>\n        </ol>\n        <p>\n          First expanded the intrinsic ambition within me and second helped me\n          be more confident.\n        </p>\n        <p>\n          During spare time, I worked on multiple small projects, CMS,\n          ecommerce. Caught up with friends, goto movies and gym. Started\n          helping with house chores.\n        </p>\n        <p>\n          Bought a personal VPS server and performed all sorts of experiments,\n          lots of moving fast and breaking things which helped my confidence\n          grow more. Asked my friend to purchase a domain after which I started\n          blogging.\n        </p>\n\n        <Alert severity=\"success\" icon={false} className=\"mt-5\">\n          <AlertTitle>TLDR;</AlertTitle>Switching jobs got me out of my comfort\n          zone, and I learned about cloud technologies and agile methodologies.\n          Found good mentors. Moved fast and broke things which contributed to\n          faster growth.\n        </Alert>\n\n        <Grid container spacing={3} className=\"mt-3\">\n          <Grid item xs={4}>\n            <img src={abc_two} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={graduation} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={4}>\n            <img src={abc} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n        </Grid>\n      </div>\n      <hr />\n\n      <div className=\"year mb-5\">\n        <h2>Year 3 (2020)</h2>\n        <p>\n          Cloud technologies, agile methodologies, knowledgeable coworkers and\n          huge learning opportunities, things I wanted were all present. I put\n          lots of hours into adjusting to the changing environment, eventually\n          burning myself out.\n        </p>\n        <p>\n          The project was portrayed momentous &amp; critical which management\n          reminded regularly, as an employee I felt so small to all this.The\n          pressure to meet the expectation was huge. Maybe others felt the same\n          and that's why there was a communication gap amongst developers even\n          though they were physically present.\n        </p>\n        <p>\n          Work and business logic seemed pointless to me at this point. I knew\n          my work performance was weak and was basically focused on the skills\n          which would help me down the line and having an income would allow you\n          to go places and buy stuff. Had an appraisal (40k).\n        </p>\n        <p>\n          Continued going to the gym, hikes, meet friends, started exploring new\n          restaurants and fancy shops.\n        </p>\n        <p>For vacation I went to Pokhara.</p>\n        <p>Attended first office outing.&nbsp;</p>\n        <p>\n          Appointed a checkup at the dentist and had to do a second root canal\n          treatment.\n        </p>\n        <p>\n          Covid pandemic happened and things went south. Day to day lifestyle\n          was impacted for all. There was a risk of getting infected, things\n          were uncertain, everyone was scared and all we could do was stay\n          indoors. The pandemic had infected all the infrastructure globally and\n          the only thing keeping things afloat was IT.\n        </p>\n        <p>\n          Work from home became the new norm. Now, I was working 9am - 9pm to\n          meet the sprint deadlines.FML. This continued for a few months and I\n          quit. Of Course my parents were furious as it was not a proper time to\n          leave a secure job and be unemployed.\n        </p>\n        <p>\n          For the next two months, I spent my time exploring devops techs like\n          docker, apache, nginx, openvpn and frontend technologies : reactjs. I\n          also built a NEPE web scraper and ran it in cronjob.\n        </p>\n        <p>\n          I was actively posting in Developer Nepal's community page, and\n          someone saw the posts and offered me a job. I was then not looking for\n          a new job, still applied and got it (50K). My parents calmed down a\n          bit after this.\n        </p>\n        <p>\n          I joined a Portuguese startup company Mobwizards, oversea's dev team\n          was chill af, especially my manager Jorge. He loved momos and often\n          visited Nepali restaurant near his home in Lisbon. I was the lead\n          developer here at Nepal and mentored two other mid-devs, built a\n          docker image to support legacy codebase, designed a database and some\n          of the most beautiful code I've ever written. Months spent learning\n          after leaving previous work really paid off.\n        </p>\n        <Alert severity=\"success\" icon={false} className=\"mt-5\">\n          <AlertTitle>TLDR;</AlertTitle> Move fast and break things continue.\n          Changing to a new job helped me bring out the best I had to offer and\n          helped peers grow as well. Sense of Independence and confidence grew\n          within, able to take new challenges head on heighten.\n        </Alert>\n\n        <Grid container spacing={3} className=\"mt-3\">\n          <Grid item xs={6}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <img src={hike} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={pokhara_3} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={office_outing} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={office_outing2} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={poker} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={sujan} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={3}>\n            <img src={pokhara_2} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n          <Grid item xs={3}>\n            <img src={covid_2} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n        </Grid>\n      </div>\n      <hr />\n\n      <div className=\"year mb-5\">\n        <h2>Year 4 (2021)</h2>\n        <p>\n          Mobwizard's company structure suddenly changed and I had two managers,\n          and they didn't get along. It became difficult to work under two of\n          them, shit just turned into snakes and ladder. I realized the pattern\n          and applied to one place, Wolfmatrix. Had a great in depth technical\n          interview and got my offer letter 2 days later (70K).\n        </p>\n        <p>\n          Working at Mobwizard helped me realize the potential within me, not\n          only was I growing but I helped my peers and associate developers as\n          well. I had accomplished more than I thought I could have in 6 months.\n          After a month's notice I left with a warm goodbye to the team.\n        </p>\n        <p>\n          Transitioning to Wolfmatrix team was easy as pie, dev's had mutual\n          respect for one another and seniors were open-minded and\n          accommodating. New ideas and discussions were welcomed, if an idea\n          sounded good and could be executed efficiently it was accepted, a\n          startup mindset. There were frequent events happening to keep dev's\n          motivated and entertained. In fact, I learned how to play Marriage :\n          card game, and also played the first game of Beer pong here.\n        </p>\n        <p>\n          I worked on a Rail replacement management software, we built several\n          versions which were put on tender for Australian train companies and\n          some got selected. Worked as a full stack developer, sometimes I would\n          be working on the UI and brand color scheme, sometimes on the backend\n          api stuff or database. Product ownership level was high and self\n          exploration was continuous.\n        </p>\n        <p>\n          I also worked on a Microservice. It was an excel importer\n          functionality for the software which was written in C#. The switch to\n          compile type language was interesting. Later, deployed the\n          microservice in AWS's Lambda function.\n        </p>\n        <p>\n          This year, My sister got married and I went to Butwal to attend\n          groom's wedding party. I went on a mini vacation to Dhulikhel and\n          tried pottery at Bhaktapur.\n        </p>\n        <p>\n          While continuing my main project, I also mentored some freshers who\n          were really smart and hardworking. In 3 months time period, they had\n          basic concepts of frontend : Reactjs, backend: symfony/nodejs,\n          database : Mysql. With some guidance, they were given the task of\n          building office management software which is still used at the time of\n          writing this journal.\n        </p>\n        <p>\n          Over the months, I would switch to different projects within the\n          office and help when there is a developer shortage and learn new\n          things on the way. After working on microservices, my interest\n          switched to the cloud.\n        </p>\n        <Alert severity=\"success\" icon={false} className=\"mt-5\">\n          <AlertTitle>TLDR;</AlertTitle> See one, do one , now I need to teach\n          one. Yep, at this point I was learning the topics that seemed\n          interesting to me and shared my knowledge to freshers and associate\n          developers.&nbsp;\n        </Alert>\n\n        <Grid container spacing={3} className=\"mt-3\">\n          <Grid item xs={6}>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <img src={sherpa} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={sherpa_farewell} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={dhulikhel} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={pottery} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n              <Grid item xs={4}>\n                <img src={butwal_flight} alt=\"asd\" className=\"img-fluid\" />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={3}>\n            <img src={sister_wedding} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n\n          <Grid item xs={3}>\n            <img src={beer_pong} alt=\"asd\" className=\"img-fluid\" />\n          </Grid>\n        </Grid>\n      </div>\n      <hr />\n\n      <h2>Year 5 (2022 )</h2>\n      <p>\n        The stock market had been on a bull run since covid and it was the talk\n        of the town. I had applied for some IPO and few were luckily allotted.\n        Got hooked on the market trend and spent some time learning about\n        financial analysis, financial independence and finally started inventing\n        on the secondary market.\n      </p>\n      <p>\n        Over the next months, I handed over development tasks to fellow\n        coworkers and began exploring the devOps roadmap. The current\n        infrastructure was starting to fail and appeared as a bottleneck for the\n        application,&nbsp; a need for an auto scalable architecture. There was\n        Green light to research on the topic and find a solution. After 2-3\n        weeks of intense research and lots of hits and trials later, I built\n        an&nbsp; Auto Scalable Cloud Architecture based on top of AWS's elastic\n        container service which was implemented for 3 projects. One of the\n        coolest project worked on.\n      </p>\n      <p>\n        Yearly performance review had come and I was promoted to senior software\n        engineer(85k).\n      </p>\n      <p>\n        I would still continue providing support on the microservice. Over the\n        months, I implemented bitbucket pipelines to other active projects as\n        well. During spare time, would discuss various tech topics with coworker\n        @Rojen such as docker, machine learning , AI, Dalle.&nbsp;\n      </p>\n      <p>\n        At the time, the client would send feature proposals and we would\n        breakdown the tasks and give them time estimations. This proposal took\n        time to be approved resulting in more spare time.\n      </p>\n      <p>\n        I took on a side job for a client, they wanted an offline desktop\n        application for their gold shop. The software was built using electron\n        js, it took 4 months of development time and a couple more iterations\n        for bug fixes and new features. I am more surprised I was able to build\n        a software for an environment where there was no previous experience.\n      </p>\n      <p>\n        There was a dengue outbreak and I got infected. It put me to bed for a\n        week and during that time, I read some financial books. Continued\n        researching more on stocks.Invested 25% of savings into stocks and\n        started investing in SIP Mutual funds on a monthly basis.&nbsp;\n      </p>\n      <p>\n        For this year's vacation, I went to Langtang. The weather got\n        notoriously bad and the trek was very laborious. Not every day in life\n        is rainbow and sunshine.\n      </p>\n      <p>\n        At this point of my life, I had achieved most of the goals set at the\n        beginning and more. I would pass on financial knowledge to friends,\n        listen to their job issues and give suggestions based on my experience.\n        As a man, it is in our biology to protect and provide. Of Course you'd\n        want the best for the people you'd care about and sometimes resulting in\n        putting them under pressure of walking in your shoes. And this is bad.\n        When someone shares their insecurities, just be understanding and kind.\n        Every human is equal, the moment one considers themselves superior to\n        another, you'd end up with a superiority complex.\n      </p>\n      <p>\n        And so I learned something about being a son/brother/man/leader. You\n        can't push people into following you for no reason. You have to be ready\n        to listen. Wait for them to come to you. Do that and they'll know they\n        can depend on you.\n      </p>\n      <p>\n        Don't waste time wondering if you made mistakes. Life's too short for\n        that. Learn from life's lessons and move on with greater wisdom.\n      </p>\n\n      <Alert severity=\"success\" icon={false} className=\"mt-5\">\n        <AlertTitle>TLDR;</AlertTitle> Self taught myself about financial\n        knowledge, started investing. Built an awesome cloud architecture and\n        gold management software. Some emotional maturity. Feeling content with\n        the achievements, I realized pursuing masters would be the next step.\n      </Alert>\n\n      <Grid container spacing={3} className=\"mt-3\">\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <img src={yomari} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n            <Grid item xs={4}>\n              <img src={wolf_outing} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n            <Grid item xs={4}>\n              <img src={pushups} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n            <Grid item xs={4}>\n              <img src={langtang} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n            <Grid item xs={4}>\n              <img src={wolf_holi} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n            <Grid item xs={4}>\n              <img src={kic_meet} alt=\"asd\" className=\"img-fluid\" />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={3}>\n          <img src={wolf_fish} alt=\"asd\" className=\"img-fluid\" />\n        </Grid>\n        <Grid item xs={3}>\n          <img src={pizza} alt=\"asd\" className=\"img-fluid\" />\n        </Grid>\n      </Grid>\n\n      <p>Last updated : Saturday, March 12, 2023</p>\n    </div>\n  );\n};\n\nexport default FiveYearsAsSWE;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { routes } from \"./posts/JournalIndex.js\";\n\nconst ListJournal = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <Link to={`/journal/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n          </div>\n        </div>\n      ))}\n\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListJournal;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"1rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/JournalIndex.js\";\n\nconst ShowJournal = () => {\n  return (\n    <Switch>\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/journal/${item.slug_title}`}\n          component={item.component}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/projects\" />\n    </Switch>\n  );\n};\n\nexport default ShowJournal;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListJournal from \"./ListJournal\";\nimport ShowJournal from \"./ShowJournal\";\n\nconst Journal = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/journal\" component={ListJournal} />\n      <Route exact path=\"/journal/:slug\" component={ShowJournal} />\n    </Switch>\n  );\n};\n\nexport default Journal;\n","export default __webpack_public_path__ + \"static/media/eisei.f9f432c7.jpeg\";","import React from \"react\";\nimport eisei from \"./images/eisei.jpeg\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Eisei = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Eisei : A space adventure game\n      </Typography>\n      <div>\n        <p>\n          The word Eisei means satellite in Japanese, I found this word when\n          searching for cool names relating to astrology for naming the game I\n          was developing. Eisei is a space shooter adventure game build on top\n          of{\" \"}\n          <a\n            href=\"https://www.yoyogames.com/en/gamemaker\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Game Maker studio\n          </a>{\" \"}\n          . I build this game in 3rd year of my bachelors, the main goal was to\n          get myself get better idea on programming and have fun while doing so.\n          It helped me get better idea of OOP and get out of my comfort zone and\n          deep dive into game engine documents.\n        </p>\n\n        <p>The game is available for two platforms:</p>\n        <ul>\n          <li>\n            Windows :{\" \"}\n            <a\n              href=\"https://drive.google.com/file/d/0B1UfqKYnpobyZi1GNzdCNHFCQ0E/view?usp=sharing\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Download Link\n            </a>\n          </li>\n          <li>\n            Android :{\" \"}\n            <a\n              href=\"https://drive.google.com/file/d/0B1UfqKYnpobyaEdYRkJWSzN1WTg/view?usp=sharing\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Download Link\n            </a>\n          </li>\n        </ul>\n        <p>\n          <img src={eisei} alt=\"eisei.jpeg\" />\n          <br />\n        </p>\n      </div>\n    </article>\n  );\n};\n\nexport default Eisei;\n","export default __webpack_public_path__ + \"static/media/nepse.0f113710.png\";","import React from \"react\";\nimport nepse from \"./images/nepse.png\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NepseApi = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        NEPSE-Api\n      </Typography>\n      <p>\n        There is no free NEPSE api resourse provider so I decided to make one\n        for my own. This project provides api for 3 things:\n      </p>\n      <ol>\n        <li>Todays Share</li>\n        <li>Top Gainers</li>\n        <li>Top Loosers</li>\n      </ol>\n      <p>\n        <br />\n      </p>\n      <p>\n        <img src={nepse} alt=\"nepse api page\" />\n      </p>\n      <p>\n        Here is the Github link:{\" \"}\n        <a\n          href=\"https://bishaludash.github.io/NEPSE-Api/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          NEPSE-Api\n        </a>\n      </p>\n    </article>\n  );\n};\n\nexport default NepseApi;\n","export default __webpack_public_path__ + \"static/media/namecheap1.0680dbc9.png\";","export default __webpack_public_path__ + \"static/media/namecheap2.283cf029.png\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport namecheap1 from \"./images/namecheap1.png\";\nimport namecheap2 from \"./images/namecheap2.png\";\n\nconst NamecheapApi = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Namecheap Api\n      </Typography>\n\n      <p>\n        When I was working for Mobwizards, we had to migrate to a new VPS server\n        with higher specs and it was a tedious job to update the DNS host\n        records for each domain (130 plus at the time). Dept head suggested we\n        use the namecheap api to update add domains at once, so i began my\n        research and started working on the script. My finished script would\n        read domains from a file which was stored in array and update DNS\n        records for each.\n      </p>\n\n      <p>\n        Later as our project grew, I integrated bunch of namecheap api into our\n        application as requested by the marketing team which helped improve\n        efficiency. The{\" \"}\n        <a\n          href=\"https://www.namecheap.com/support/api/methods/\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          api\n        </a>{\" \"}\n        are as below :\n      </p>\n      <ul>\n        <li>Domains : getList, create, check, renew, getInfo</li>\n        <li>Domains.dns : getList, getHosts ,setHosts</li>\n        <li>Users: getPricing, update</li>\n      </ul>\n\n      <p>\n        <img src={namecheap1} alt=\"nepse api page\" />\n      </p>\n\n      <p>\n        <img src={namecheap2} alt=\"nepse api page\" />\n      </p>\n    </article>\n  );\n};\n\nexport default NamecheapApi;\n","export default __webpack_public_path__ + \"static/media/docker.38a7e458.jpeg\";","import React from \"react\";\nimport dockerImage from \"./images/docker.jpeg\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst DockerImage = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        Docker Image to run legacy codebase.\n      </Typography>\n      <div>\n        <p>\n          The legacy codebase was a mix of core php and yii framework, Mysql as\n          database and apache as web server. Whenever using newer version of\n          php, the codebase used to show deprecated warnings and some\n          functionality stoped working. Also it was a tedious job to setup the\n          projects.\n        </p>\n\n        <p>\n          To overcome such problems, I created docker images to run the project\n          and make it easier to the dev team to focus on features. I created two\n          images.\n          <ul>\n            <li>\n              First image for consisting the required php version, apache web\n              server\n            </li>\n            <li> second image consisting the Mysql database.</li>\n          </ul>\n          The container run from these images would communicate with each other\n          using docker network and to retain database data a volume was made.\n        </p>\n\n        <p>\n          <img src={dockerImage} alt=\"dockerImage.jpeg\" />\n          <br />\n        </p>\n      </div>\n    </article>\n  );\n};\n\nexport default DockerImage;\n","export default __webpack_public_path__ + \"static/media/vline_atchitecture_v2.14b3ada1.png\";","import Eisei from \"./Eisei\";\nimport NepseApi from \"./NepseApi\";\nimport NamecheapApi from \"./NamecheapApi\";\nimport DockerImage from \"./DockerImage\";\nimport MyFirstCloudArchitecture from \"./MyFirstCloudArchitecture\";\n\nexport const Posts = [\n  {\n    title: \"NEPSE-Api\",\n    slug_title: \"nepse-api\",\n    tags: \"aws, s3, aws cli\",\n    status: \"publish\",\n    created_at: \"2020-10-20\",\n    updated_at: \"2020-10-20\",\n    component: NepseApi,\n  },\n\n  {\n    title: \"Eisei : A space adventure game\",\n    slug_title: \"eisei\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2020-02-21\",\n    updated_at: \"2020-06-01\",\n    component: Eisei,\n  },\n  {\n    title: \"Namecheap Api\",\n    slug_title: \"namecheap_api\",\n    tags: \"Git\",\n    status: \"publish\",\n    created_at: \"2021-02-21\",\n    updated_at: \"2021-06-01\",\n    component: NamecheapApi,\n  },\n  {\n    title: \"Docker Image to run legacy codebase\",\n    slug_title: \"Docker_image_to_run_legacy_codebase\",\n    tags: \"Docker\",\n    status: \"publish\",\n    created_at: \"2020-12-21\",\n    updated_at: \"2020-12-21\",\n    component: DockerImage,\n  },\n  {\n    title: \"My First Cloud Architecture\",\n    slug_title: \"aws_cloud_architecture\",\n    summary:\n      \"I build an auto-scalable cloud architecture build on top of AWS Elastic container service using Fargate as compute resource.\",\n    tags: \"AWS, Cloud, DevOps, Container\",\n    status: \"publish\",\n    created_at: \"2022-06-01\",\n    updated_at: \"2022-06-01\",\n    component: MyFirstCloudArchitecture,\n  },\n];\n\nconst sortDataByDates = (a, b) => {\n  if (a.created_at > b.created_at) {\n    return -1;\n  }\n  if (a.created_at < b.created_at) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const routes = Posts.sort(sortDataByDates);\n","// MyFirstCloudArchitecture\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloudArchitecture from \"./images/vline_atchitecture_v2.png\";\n\nconst MyFirstCloudArchitecture = () => {\n  return (\n    <article>\n      <Typography variant=\"h5\" color=\"primary\">\n        My First cloud Architecture\n      </Typography>\n      <div>\n        <p>\n          {/* Image */}\n          <img src={CloudArchitecture} alt=\"eisei.jpeg\" />\n          <center>Fig: Final Cloud Architecture</center>\n          <br />\n        </p>\n        {/* Introduction */}\n        <p>\n          Recently I researched, planned and build cloud architecture for Rail\n          Replacement(RRMS) projects at my workplace which is now used in\n          production. Building this architecture helped me gain good insights on\n          VPC, load balancer, autoscaling and Elastic container service.\n        </p>\n        <p>\n          In this post, I will be will be covering requirement analysis, things\n          which I learned throughout the development phase and why one resource\n          was picked over another.\n        </p>\n        {/* requirements */}\n        <h3>\n          <u>Architecture Requirements</u>\n        </h3>\n        <ol>\n          <li>\n            Deploy application in containers for easier and faster deployments.\n          </li>\n          <li>\n            Ensure high availability of application. Loads can be significantly\n            high on some days and low on some.\n          </li>\n          <li>Ensure Security.</li>\n          <li>Reduce the cost of operating architecture.</li>\n          <li>Automated deployments. Eg: Pipeline .</li>\n          <li>\n            Readily available Logs to debug. SSH into compute incase logs are\n            not enough for debugging.\n          </li>\n        </ol>\n        <p>\n          After through study of above requirements, we decided to use Fargate\n          for compute resource instead of EC2 at the very begenning. This\n          decision has proven to be good decision and I will cover the 'Why ?'\n          part later down the article.\n        </p>\n        {/* Development Phases */}\n        <h3>\n          <u>Development Phase</u>\n        </h3>\n        {/* Phase 1 */}\n        <Typography color=\"secondary\">\n          1. Push application image to ECR\n        </Typography>\n        <ul>\n          <li>\n            Setting up project environment on a machine is such a hassle.\n            Sometimes your project dipendencies and installed software versions\n            done match, sometimes language based database module is missing and\n            connection cannot be established and so on.\n          </li>\n          <li>\n            To avoid these issues, we build a docker image packaged with all\n            necessary dependencies to run the application easily locally.\n          </li>\n          <li>\n            Since our requirement was to deploy using containers, I created a\n            repository in aws elastic container registry, then build an image\n            locally for production with tagname : prod and uploaded it to the\n            repository. The tagname is important as we use in pipeline to define\n            which image tag to use for image build.\n          </li>\n        </ul>\n        {/* Phase 2 */}\n        <Typography color=\"secondary\" className=\"mt-3\">\n          2. Network\n        </Typography>\n        This phase covers the creation of network required to run the\n        application. I used VPC to create isolated network in the cloud where\n        our load balancers will be available to the public via internet from\n        anywhere and the backend containers in private network which cannot be\n        accessed outside other than through load balancer.\n        <ul>\n          <li>\n            I learned we could only create max 5 VPC per region, so made used of\n            already existing VPC.\n          </li>\n          <li>\n            All incomming request inside VPC must come through Internet gateway\n            (IG). Also the max IG count is also 5{\" \"}\n          </li>\n          <li>\n            For high availibily, create public/private subnets in atleast 2\n            regions.\n          </li>\n          <li>\n            For private subnet to access internet, we need to add NAT Gateway as\n            a middleman for outbound request.\n          </li>\n          <li>\n            Private subnet where ECS tasks are run should have inbound rule to\n            allow request from Elastic load balancer.\n          </li>\n        </ul>\n        {/* Phase 3 */}\n        <Typography color=\"secondary\" className=\"mt-3\">\n          3. Create compute resources\n        </Typography>\n        <ul>\n          <li>\n            Since the backend was container based deployment, ECS service was\n            selected.{\" \"}\n          </li>\n          <li>\n            For ECS, we could select either EC2 or Fargate as compute resource.\n            The downside to selecting EC2 instance was we were required to\n            allocate the instance in advance to setup auto-scaling. This ment we\n            had to pay for those resources even when they are not in use.\n            However for Fargate we dont need to allocate resources in advance,\n            AWS takes care of spinning up new tasks as load increases. Using\n            fargate seems to be cheaper than spinning up multiple EC2 instance\n            for standby purposes.\n          </li>\n          <li>\n            Since, fargate resource was managed by AWS we had to assign elastic\n            ip to them.\n          </li>\n          <li>\n            One concern was if some task was failing ie. cronjobs and might need\n            to SSH into fargare compute, would it be possible to SSH ? After\n            researching for couple of hours, I found that it was possible to\n            exec into fargate tasks, made an attempt later and was successful.\n          </li>\n        </ul>\n        <Typography color=\"secondary\" className=\"mt-3\">\n          4. Setup Auto-scaling\n        </Typography>\n        <ul>\n          <li>\n            As per requirement, High availability is achieved by running the\n            tasks in atleast 2 regions, if a task fails in oneregion,\n            loadbalancer will distribute request to task running in another\n            server.\n          </li>\n          <li>\n            Also, as the Average CPU Utilization increases above 70%, set up a\n            rule to spin up a new fargate task to reduce load on single task.\n          </li>\n          <li>\n            Simillarly, as the load decreses the number of tasks running is also\n            reduces.\n          </li>\n        </ul>\n        <Typography color=\"secondary\" className=\"mt-3\">\n          5. Automated Deployment\n        </Typography>\n        <ul>\n          <li>\n            Setup a codebuild & pipeline to make a new application build\n            whenever a pull request is merged into prod branch in repository.\n          </li>\n          <li>\n            The enviroment variable required by the application is provided to\n            codebuild which is used in pipeline.{\" \"}\n          </li>\n          <li>\n            When a new build starts, the application fetchs docker image\n            resources from the docker hub and if NAT Gateway is not setup , the\n            build will fail.{\" \"}\n          </li>\n        </ul>\n      </div>\n    </article>\n  );\n};\n\nexport default MyFirstCloudArchitecture;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { routes } from \"./posts/ProjectIndex.js\";\n\nconst ListProject = () => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {/*Article start*/}\n      {routes.map((item, key) => (\n        <div className={classes.article} key={key}>\n          <Link to={`/projects/${item.slug_title}`} className={classes.links}>\n            <Typography variant=\"h5\" color=\"primary\">\n              {item.title}\n            </Typography>\n          </Link>\n          <div className={classes.articleDate}>\n            {new Date(item.created_at).toDateString()}\n          </div>\n        </div>\n      ))}\n\n      {/*Article End*/}\n    </Fragment>\n  );\n};\n\nexport default ListProject;\n\nconst useStyles = makeStyles({\n  article: {\n    marginBottom: \"1rem\",\n  },\n  articleDate: {\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    color: \"#676767\",\n  },\n  links: {\n    textDecoration: \"none\",\n    \"& h5:hover\": {\n      color: \"#e57373\",\n    },\n    \"& p:hover\": {\n      color: \"#e57373\",\n    },\n  },\n  chipStyle: {\n    fontSize: \"15px\",\n    fontWeight: \"normal\",\n    \"& :hover\": {\n      color: \"#000\",\n      cursor: \"pointer\",\n    },\n  },\n});\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { routes } from \"./posts/ProjectIndex.js\";\n\nconst ShowProject = () => {\n  return (\n    <Switch>\n      {routes.map((item, key) => (\n        <Route\n          exact\n          path={`/projects/${item.slug_title}`}\n          component={item.component}\n          key={key}\n        />\n      ))}\n\n      <Redirect to=\"/projects\" />\n    </Switch>\n  );\n};\n\nexport default ShowProject;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport ListProject from \"./ListProject\";\nimport ShowProject from \"./ShowProject\";\n\nconst Project = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/projects\" component={ListProject} />\n      <Route exact path=\"/projects/:slug\" component={ShowProject} />\n    </Switch>\n  );\n};\n\nexport default Project;\n","import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  stack: {\n    paddingLeft: \"40px\",\n  },\n  stackList: {\n    textDecoration: \"underline\",\n  },\n  staclListDetails: {\n    margin: \"5px 0\",\n    marginBottom: \"2rem\",\n  },\n  links: {\n    color: \"#e57373\",\n  },\n});\n\nconst Stack = () => {\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <h2>Stack</h2>\n      <p>\n        I've put together this \"Stack\" page that covers every part of my setup.\n      </p>\n\n      <h4>Development</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>VS Code</li>\n        <p className={classes.staclListDetails}>\n          Most productive text editing environment I've ever used. Love the\n          integrated terminal and feature rich extensions. Only complain I have\n          is it consumes more mremory.\n        </p>\n\n        <li className={classes.stackList}>Sublime Text</li>\n        <div className={classes.staclListDetails}>\n          Light and fast, just perfect for low end device. Packages such as\n          terminus can make up for the missing integrated terminal.\n          <p>\n            <a\n              href=\"https://github.com/bishaludas/SublimeForReactLaravel\"\n              target=\"_blank\"\n              className={classes.links}\n              rel=\"noreferrer\"\n            >\n              My Sublime Setup\n            </a>\n          </p>\n        </div>\n\n        <li className={classes.stackList}>Jupiter Notebook</li>\n        <p className={classes.staclListDetails}>\n          Always end up using Jupyter Notebook whenever I have to debug some\n          confusing Pandas algorithm. Using PDB debugger in terminal sometimes\n          gets annoying as you can't see the datasets clearly, Jupyter to the\n          rescue. Also very helpful for testing simple logics quickly.\n        </p>\n\n        <li className={classes.stackList}>Browser</li>\n        <p className={classes.staclListDetails}>\n          Brave is lightweight browser based upon chromium that comes\n          preinstalled with ad-block tool. I prefer using this over chrome as\n          its lighter and faster.\n        </p>\n      </ul>\n\n      <h4>Frontend</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>React.js</li>\n        <p className={classes.staclListDetails}>\n          Been using React since early 2020 and I love it. Its lightweight, fast\n          and has rich third party packages. Comming form Laravels's blade\n          template , JSX was confusing at beginning but getting better at this\n          every day.\n        </p>\n\n        <li className={classes.stackList}>CSS Framework</li>\n        <ul className={classes.stack}>\n          <li>Material UI</li>\n          <p className={classes.staclListDetails}>\n            Material UI is my go to css framework whenever working with React\n            based projects. It has excellent components for faster and easier\n            web development.\n          </p>\n\n          <li>Bootstrap</li>\n          <p className={classes.staclListDetails}>\n            Bootstrap was the first css framework i picked up and used for all\n            my projects before switching to react and Material ui. All of\n            laravel projects use bootstrap for frontend.\n          </p>\n        </ul>\n      </ul>\n\n      <h4>Backend</h4>\n      <ul className={classes.stack}>\n        <li className={classes.stackList}>Web/Api Development</li>\n        <p className={classes.staclListDetails}>\n          I use ubuntu 18.4 as my local environment and also use docker for some\n          projects. All of my web/api projects use laravel as backend. This is\n          what i've been using for years and am pretty confident in. However, I\n          use flask whenever i do any data analytics projects as this kind of\n          projects dont require all the magical features provided by laravel out\n          of the box. For data analytics projects I mostly use python's popular\n          package Pandas.\n        </p>\n\n        <p className={classes.staclListDetails}>\n          For server Apache or Nginx any would work, both are easy to work with\n          and have lots of article on howtos. Currently this projects uses Nginx\n          and SSl certificate by Let's Encrypt.\n        </p>\n\n        <li className={classes.stackList}>Database</li>\n        <p className={classes.staclListDetails}>\n          Been using relational database since day one ie MySQL and postgres. I\n          am pretty good with the sql queries, triggers, CTE, stored procedures.\n          I am thinking of learning NoSql and using it over some of my light\n          weight projects.\n        </p>\n      </ul>\n\n      <h4>Hosting</h4>\n      <ul>\n        <li className={classes.stackList}>NestNepal</li>\n        <div className={classes.staclListDetails}>\n          NestNepals provides pretty good specs VPS as mind bogging price rate.\n          Currently using their server to host all my projects.\n          <p>\n            <a\n              href=\"http://myaccount.nestnepal.com/aff.php?aff=7\"\n              target=\"_blank\"\n              className={classes.links}\n              rel=\"noreferrer\"\n            >\n              Go check them out!\n            </a>\n          </p>\n        </div>\n        <li className={classes.stackList}>Mail Solution</li>\n        <p className={classes.staclListDetails}>\n          I use Zoho for email because it provide a free business plan along\n          with TLS standart encryption.\n        </p>\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Stack;\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Navbar from \"./components/Navigation/Navbar\";\nimport About from \"./components/About/About\";\nimport Resume from \"./components/Resume/Resume\";\nimport Articles from \"./components/Articles/Articles\";\nimport Journal from \"./components/Journal/Journal\";\nimport Project from \"./components/projects/Project\";\nimport Stack from \"./components/About/Stack\";\n\nconst App = () => {\n  const classes = useStyles();\n  const [darkMode, setDarkMode] = useState(true);\n  const darkTheme = createTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n      primary: {\n        main: darkMode ? \"#fff\" : \"#000\",\n      },\n      secondary: {\n        main: \"#e57373\",\n      },\n      background: {\n        default: darkMode ? \"#202020\" : \"#fff\",\n      },\n    },\n    typography: {\n      fontFamily: \"Open Sans\",\n      fontSize: 18,\n    },\n  });\n\n  /*function to change the theme*/\n  const changeTheme = () => {\n    console.log(darkMode);\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline />\n      {/* <Router basename=\"/gh-budash\"> */}\n      <Router basename=\"\">\n        <div className={classes.container}>\n          <Navbar changeTheme={changeTheme} darkMode={darkMode} />\n          <div className=\"mt-5\">\n            <Switch>\n              <Route exact path=\"/\" component={About} />\n              <Route path=\"/resume\" component={Resume} />\n              <Route path=\"/articles\" component={Articles} />\n              <Route path=\"/journal\" component={Journal} />\n              <Route path=\"/projects\" component={Project} />\n              <Route path=\"/stack\" component={Stack} />\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: \"0 auto\",\n    width: \"70%\",\n    padding: \"5%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n    fontSize: \"18px\",\n    fontFamily: \"Open Sans\",\n  },\n  contentBody: {\n    marginTop: \"2.5rem\",\n  },\n}));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}